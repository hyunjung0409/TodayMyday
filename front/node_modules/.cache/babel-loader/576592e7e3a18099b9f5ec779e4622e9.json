{"ast":null,"code":"import { getAxios } from '../api';\nimport { all, fork, takeLatest, call, put } from 'redux-saga/effects';\nimport { WORD_GET_FAILURE, WORD_GET_REQUEST, WORD_GET_SUCCESS } from '../reducers/word';\nconst axios = getAxios();\n\nfunction wordGetAPI() {\n  return axios.get('test/word');\n}\n\nfunction* wordGet(action) {\n  try {\n    const res = yield call(wordGetAPI);\n    yield put({\n      type: WORD_GET_SUCCESS,\n      data: res.data\n    });\n  } catch (err) {\n    yield put({\n      type: WORD_GET_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchWordGet() {\n  yield takeLatest(WORD_GET_REQUEST, wordGet);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchWordGet)]);\n}","map":{"version":3,"sources":["C:/Users/SSAFY/Desktop/새 폴더/S06P31C205/front/src/sagas/word.js"],"names":["getAxios","all","fork","takeLatest","call","put","WORD_GET_FAILURE","WORD_GET_REQUEST","WORD_GET_SUCCESS","axios","wordGetAPI","get","wordGet","action","res","type","data","err","error","response","watchWordGet","userSaga"],"mappings":"AAAA,SAASA,QAAT,QAAyB,QAAzB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,QAAiD,oBAAjD;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,QAAqE,kBAArE;AAEA,MAAMC,KAAK,GAAGT,QAAQ,EAAtB;;AAEA,SAASU,UAAT,GAAsB;AACpB,SAAOD,KAAK,CAACE,GAAN,CAAU,WAAV,CAAP;AACD;;AAED,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMV,IAAI,CAACM,UAAD,CAAtB;AACA,UAAML,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAEP,gBADE;AAERQ,MAAAA,IAAI,EAAEF,GAAG,CAACE;AAFF,KAAD,CAAT;AAID,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,UAAMZ,GAAG,CAAC;AACRU,MAAAA,IAAI,EAAET,gBADE;AAERY,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaH;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUI,YAAV,GAAyB;AACvB,QAAMjB,UAAU,CAACI,gBAAD,EAAmBK,OAAnB,CAAhB;AACD;;AAED,eAAe,UAAUS,QAAV,GAAqB;AAClC,QAAMpB,GAAG,CAAC,CAACC,IAAI,CAACkB,YAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { getAxios } from '../api'\r\nimport { all, fork, takeLatest, call, put } from 'redux-saga/effects'\r\nimport { WORD_GET_FAILURE, WORD_GET_REQUEST, WORD_GET_SUCCESS } from '../reducers/word'\r\n\r\nconst axios = getAxios()\r\n\r\nfunction wordGetAPI() {\r\n  return axios.get('test/word')\r\n}\r\n\r\nfunction* wordGet(action) {\r\n  try {\r\n    const res = yield call(wordGetAPI)\r\n    yield put({\r\n      type: WORD_GET_SUCCESS,\r\n      data: res.data,\r\n    })\r\n  } catch (err) {\r\n    yield put({\r\n      type: WORD_GET_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction* watchWordGet() {\r\n  yield takeLatest(WORD_GET_REQUEST, wordGet)\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchWordGet)])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}