{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Desktop\\\\\\uC0C8 \\uD3F4\\uB354\\\\S06P31C205\\\\front\\\\src\\\\components\\\\Diary\\\\Comment.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getAxios } from '../../api';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router';\nimport { Button, Modal } from 'antd';\nimport UpdateComments from './UpdateComments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CommentContent = styled.div`\n  overflow: auto;\n  max-height: 80vh;\n`;\n_c = CommentContent;\nconst StyledButton = styled(Button)`\n  &&& {\n    bacground: #fff;\n    border-color: rgb(220, 220, 220);\n    color: rgb(100, 100, 100);\n  }\n`;\n_c2 = StyledButton;\nconst ReadComments = styled.div`\n  // border: 1px solid red;\n`;\n_c3 = ReadComments;\nconst WriteComment = styled.textarea`\n  min-height: 70px;\n  resize: none;\n  width: 80%;\n  margin-left: auto;\n  margin-right: auto;\n  margin-bottom: 1rem;\n  border-color: rgba(100, 100, 100, 0.2);\n`;\n_c4 = WriteComment;\nconst ReadComment = styled.div`\n    display: flex;\n    width: 100%\n    margin-bottom: 5%;\n    margin-top: 5%;\n    // border: 1px solid blue;\n`;\n_c5 = ReadComment;\nconst EnrollButton = styled.div`\n  margin-right: 2%;\n`;\n_c6 = EnrollButton;\n\nfunction Comment() {\n  _s();\n\n  const {\n    dno\n  } = useParams();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const [comment, setComment] = useState('');\n  const [comments, setComments] = useState([]);\n\n  const createComment = () => {\n    const axios = getAxios();\n\n    if (comment === '') {\n      Modal.error({\n        title: '댓글을 입력해주세요',\n        okText: '확인'\n      });\n    } else if (comment !== '') {\n      axios.post('comment', {\n        content: comment,\n        userId: me.userId\n      }, {\n        params: {\n          dno: dno\n        }\n      }).then(res => {\n        setComment('');\n        getComment();\n      });\n    }\n  };\n\n  const getComment = async () => {\n    const axios = getAxios();\n    axios.get(`diary/read/${dno}`, {\n      params: {\n        userId: me.userId\n      }\n    }).then(res => {\n      setComments([...res.data.comments]);\n    }).catch(err => {\n      Modal.error({\n        title: '잘못된 접근입니다',\n        okText: '확인'\n      });\n    });\n  };\n\n  useEffect(() => {\n    me && getComment();\n  }, [me]);\n  return /*#__PURE__*/_jsxDEV(StyledBackground, {\n    children: [/*#__PURE__*/_jsxDEV(ReadComment, {\n      children: [/*#__PURE__*/_jsxDEV(WriteComment, {\n        placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694...\",\n        value: comment,\n        onChange: e => {\n          setComment(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EnrollButton, {\n        children: /*#__PURE__*/_jsxDEV(StyledButton, {\n          variant: \"dark\",\n          size: \"sm\",\n          onClick: e => {\n            createComment();\n          },\n          children: \"\\uB4F1\\uB85D\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CommentContent, {\n      children: /*#__PURE__*/_jsxDEV(ReadComments, {\n        children: comments.map(a => {\n          return /*#__PURE__*/_jsxDEV(UpdateComments, {\n            cno: a.cno,\n            id: a.userId,\n            profileImage: a.profileImage,\n            nickname: a.nickname,\n            content: a.content,\n            createdat: a.createdat,\n            getComment: getComment\n          }, a.cno, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Comment, \"Td+T7raFIG5WO1n7rxX3Kug573g=\", false, function () {\n  return [useParams, useSelector];\n});\n\n_c7 = Comment;\nconst StyledBackground = styled.div`\n  background-color: #fff;\n  padding: 2%;\n  border-radius: 0 5px 5px 0;\n  height: 100vh;\n`;\n_c8 = StyledBackground;\nexport default Comment;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n\n$RefreshReg$(_c, \"CommentContent\");\n$RefreshReg$(_c2, \"StyledButton\");\n$RefreshReg$(_c3, \"ReadComments\");\n$RefreshReg$(_c4, \"WriteComment\");\n$RefreshReg$(_c5, \"ReadComment\");\n$RefreshReg$(_c6, \"EnrollButton\");\n$RefreshReg$(_c7, \"Comment\");\n$RefreshReg$(_c8, \"StyledBackground\");","map":{"version":3,"sources":["C:/Users/SSAFY/Desktop/새 폴더/S06P31C205/front/src/components/Diary/Comment.jsx"],"names":["React","useEffect","useState","getAxios","useSelector","useParams","styled","useNavigate","Button","Modal","UpdateComments","CommentContent","div","StyledButton","ReadComments","WriteComment","textarea","ReadComment","EnrollButton","Comment","dno","me","state","user","comment","setComment","comments","setComments","createComment","axios","error","title","okText","post","content","userId","params","then","res","getComment","get","data","catch","err","e","target","value","map","a","cno","profileImage","nickname","createdat","StyledBackground"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { getAxios } from '../../api'\r\nimport { useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { useNavigate } from 'react-router'\r\nimport { Button, Modal } from 'antd'\r\nimport UpdateComments from './UpdateComments'\r\nconst CommentContent = styled.div`\r\n  overflow: auto;\r\n  max-height: 80vh;\r\n`\r\nconst StyledButton = styled(Button)`\r\n  &&& {\r\n    bacground: #fff;\r\n    border-color: rgb(220, 220, 220);\r\n    color: rgb(100, 100, 100);\r\n  }\r\n`\r\nconst ReadComments = styled.div`\r\n  // border: 1px solid red;\r\n`\r\nconst WriteComment = styled.textarea`\r\n  min-height: 70px;\r\n  resize: none;\r\n  width: 80%;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  margin-bottom: 1rem;\r\n  border-color: rgba(100, 100, 100, 0.2);\r\n`\r\nconst ReadComment = styled.div`\r\n    display: flex;\r\n    width: 100%\r\n    margin-bottom: 5%;\r\n    margin-top: 5%;\r\n    // border: 1px solid blue;\r\n`\r\nconst EnrollButton = styled.div`\r\n  margin-right: 2%;\r\n`\r\nfunction Comment() {\r\n  const { dno } = useParams()\r\n\r\n  const { me } = useSelector((state) => state.user)\r\n  const [comment, setComment] = useState('')\r\n  const [comments, setComments] = useState([])\r\n\r\n  const createComment = () => {\r\n    const axios = getAxios()\r\n\r\n    if (comment === '') {\r\n      Modal.error({\r\n        title: '댓글을 입력해주세요',\r\n        okText: '확인',\r\n      })\r\n    } else if (comment !== '') {\r\n      axios\r\n        .post('comment', { content: comment, userId: me.userId }, { params: { dno: dno } })\r\n        .then((res) => {\r\n          setComment('')\r\n          getComment()\r\n        })\r\n    }\r\n  }\r\n  const getComment = async () => {\r\n    const axios = getAxios()\r\n\r\n    axios\r\n      .get(`diary/read/${dno}`, { params: { userId: me.userId } })\r\n      .then((res) => {\r\n        setComments([...res.data.comments])\r\n      })\r\n      .catch((err) => {\r\n        Modal.error({\r\n          title: '잘못된 접근입니다',\r\n          okText: '확인',\r\n        })\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    me && getComment()\r\n  }, [me])\r\n  return (\r\n    <StyledBackground>\r\n      <ReadComment>\r\n        <WriteComment\r\n          placeholder=\"댓글을 입력해주세요...\"\r\n          value={comment}\r\n          onChange={(e) => {\r\n            setComment(e.target.value)\r\n          }}></WriteComment>\r\n        <EnrollButton>\r\n          <StyledButton\r\n            variant=\"dark\"\r\n            size=\"sm\"\r\n            onClick={(e) => {\r\n              createComment()\r\n            }}>\r\n            등록\r\n          </StyledButton>\r\n        </EnrollButton>\r\n      </ReadComment>\r\n\r\n      <CommentContent>\r\n        <ReadComments>\r\n          {comments.map((a) => {\r\n            return (\r\n              <UpdateComments\r\n                key={a.cno}\r\n                cno={a.cno}\r\n                id={a.userId}\r\n                profileImage={a.profileImage}\r\n                nickname={a.nickname}\r\n                content={a.content}\r\n                createdat={a.createdat}\r\n                getComment={getComment}></UpdateComments>\r\n            )\r\n          })}\r\n        </ReadComments>\r\n      </CommentContent>\r\n    </StyledBackground>\r\n  )\r\n}\r\n\r\nconst StyledBackground = styled.div`\r\n  background-color: #fff;\r\n  padding: 2%;\r\n  border-radius: 0 5px 5px 0;\r\n  height: 100vh;\r\n`\r\n\r\nexport default Comment\r\n"]},"metadata":{},"sourceType":"module"}