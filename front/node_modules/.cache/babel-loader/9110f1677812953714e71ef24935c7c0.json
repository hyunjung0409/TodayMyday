{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Desktop\\\\\\uC0C8 \\uD3F4\\uB354\\\\S06P31C205\\\\front\\\\src\\\\components\\\\LoginForm.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, Form, Input, Modal } from 'antd';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useDispatch } from 'react-redux';\nimport { loginRequestAction } from '../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MyButton = styled(Button)`\n  margin-bottom: 10px;\n  width: 100%;\n  &&& {\n    background-color: #e86f8b;\n    border: 0px solid;\n  }\n`;\n_c = MyButton;\n\nfunction LoginForm(_ref) {\n  _s();\n\n  let {\n    setIsModalVisible\n  } = _ref;\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const onFinish = values => {\n    dispatch(loginRequestAction({\n      userId: values.userId,\n      password: values.password,\n      navigate,\n      Modal\n    }));\n  };\n\n  const onFinishFailed = errorInfo => {// console.log('Failed:', errorInfo)\n  };\n\n  const pageMove = () => {\n    setIsModalVisible(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      name: \"basic\",\n      onFinish: onFinish,\n      onFinishFailed: onFinishFailed,\n      autoComplete: \"off\",\n      layout: \"vertical\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"\\uC544\\uC774\\uB514\",\n          name: \"userId\",\n          children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n          name: \"password\",\n          children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          children: [/*#__PURE__*/_jsxDEV(MyButton, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginTop: '10px'\n            },\n            children: [\"\\uACC4\\uC815\\uC774 \\uC5C6\\uC73C\\uC2E0\\uAC00\\uC694?\", '  ', /*#__PURE__*/_jsxDEV(Link, {\n              style: {\n                color: '#e86f8b'\n              },\n              to: \"/user/signup\",\n              onClick: pageMove,\n              children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(LoginForm, \"R1L93MxeLXzQXESpmjjjQSuQgvM=\", false, function () {\n  return [useDispatch, useNavigate];\n});\n\n_c2 = LoginForm;\nexport default LoginForm;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyButton\");\n$RefreshReg$(_c2, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/SSAFY/Desktop/새 폴더/S06P31C205/front/src/components/LoginForm.jsx"],"names":["React","Button","Form","Input","Modal","Link","useNavigate","styled","useDispatch","loginRequestAction","MyButton","LoginForm","setIsModalVisible","dispatch","navigate","onFinish","values","userId","password","onFinishFailed","errorInfo","pageMove","width","textAlign","marginTop","color"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,KAA9B,QAA2C,MAA3C;AACA,SAASC,IAAT,EAAeC,WAAf,QAAkC,kBAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;;AAEA,MAAMC,QAAQ,GAAGH,MAAM,CAACN,MAAD,CAAS;AAChC;AACA;AACA;AACA;AACA;AACA;AACA,CAPA;KAAMS,Q;;AASN,SAASC,SAAT,OAA0C;AAAA;;AAAA,MAAvB;AAAEC,IAAAA;AAAF,GAAuB;AACxC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,QAAMS,QAAQ,GAAIC,MAAD,IAAY;AAC3BH,IAAAA,QAAQ,CACNJ,kBAAkB,CAAC;AAAEQ,MAAAA,MAAM,EAAED,MAAM,CAACC,MAAjB;AAAyBC,MAAAA,QAAQ,EAAEF,MAAM,CAACE,QAA1C;AAAoDJ,MAAAA,QAApD;AAA8DV,MAAAA;AAA9D,KAAD,CADZ,CAAR;AAGD,GAJD;;AAMA,QAAMe,cAAc,GAAIC,SAAD,IAAe,CACpC;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAG,MAAM;AACrBT,IAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,IAAD;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,QAAQ,EAAEG,QAFZ;AAGE,MAAA,cAAc,EAAEI,cAHlB;AAIE,MAAA,YAAY,EAAC,KAJf;AAKE,MAAA,MAAM,EAAC,UALT;AAAA,6BAME;AAAK,QAAA,KAAK,EAAE;AAAEG,UAAAA,KAAK,EAAE,MAAT;AAAiBC,UAAAA,SAAS,EAAE;AAA5B,SAAZ;AAAA,gCACE,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,KAAK,EAAC,oBAAjB;AAAuB,UAAA,IAAI,EAAC,QAA5B;AAAA,iCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,KAAK,EAAC,0BAAjB;AAAwB,UAAA,IAAI,EAAC,UAA7B;AAAA,iCACE,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBALF,eASE,QAAC,IAAD,CAAM,IAAN;AAAA,kCACE,QAAC,QAAD;AAAU,YAAA,IAAI,EAAC,SAAf;AAAyB,YAAA,QAAQ,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,KAAK,EAAE;AAAEC,cAAAA,SAAS,EAAE;AAAb,aAAZ;AAAA,6EACa,IADb,eAEE,QAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAEC,gBAAAA,KAAK,EAAE;AAAT,eAAb;AAAmC,cAAA,EAAE,EAAC,cAAtC;AAAqD,cAAA,OAAO,EAAEJ,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAgCD;;GAlDQV,S;UACUH,W,EACAF,W;;;MAFVK,S;AAoDT,eAAeA,SAAf","sourcesContent":["import React from 'react'\r\nimport { Button, Form, Input, Modal } from 'antd'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { useDispatch } from 'react-redux'\r\nimport { loginRequestAction } from '../reducers/user'\r\n\r\nconst MyButton = styled(Button)`\r\n  margin-bottom: 10px;\r\n  width: 100%;\r\n  &&& {\r\n    background-color: #e86f8b;\r\n    border: 0px solid;\r\n  }\r\n`\r\n\r\nfunction LoginForm({ setIsModalVisible }) {\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n\r\n  const onFinish = (values) => {\r\n    dispatch(\r\n      loginRequestAction({ userId: values.userId, password: values.password, navigate, Modal }),\r\n    )\r\n  }\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    // console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  const pageMove = () => {\r\n    setIsModalVisible(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Form\r\n        name=\"basic\"\r\n        onFinish={onFinish}\r\n        onFinishFailed={onFinishFailed}\r\n        autoComplete=\"off\"\r\n        layout=\"vertical\">\r\n        <div style={{ width: '100%', textAlign: 'center' }}>\r\n          <Form.Item label=\"아이디\" name=\"userId\">\r\n            <Input />\r\n          </Form.Item>\r\n\r\n          <Form.Item label=\"비밀번호\" name=\"password\">\r\n            <Input.Password />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <MyButton type=\"primary\" htmlType=\"submit\">\r\n              로그인\r\n            </MyButton>\r\n            <div style={{ marginTop: '10px' }}>\r\n              계정이 없으신가요?{'  '}\r\n              <Link style={{ color: '#e86f8b' }} to=\"/user/signup\" onClick={pageMove}>\r\n                회원가입\r\n              </Link>\r\n            </div>\r\n          </Form.Item>\r\n        </div>\r\n      </Form>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoginForm\r\n"]},"metadata":{},"sourceType":"module"}