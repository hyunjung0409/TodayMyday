{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Desktop\\\\\\uC0C8 \\uD3F4\\uB354\\\\S06P31C205\\\\front\\\\src\\\\sagas\\\\article.js\";\nimport { getAxios } from '../api';\nimport { all, fork, takeLatest, call, put } from 'redux-saga/effects';\nimport { ARTICLE_ADD_FAILURE, ARTICLE_ADD_REQUEST, ARTICLE_ADD_SUCCESS, ARTICLE_LIST_REQUEST, ARTICLE_LIST_SUCCESS, ARTICLE_LIST_FAILURE, DIARY_SEARCH_WORD_REQUEST, DIARY_SEARCH_WORD_SUCCESS, DIARY_SEARCH_WORD_FAILURE, DIARY_SEARCH_CONTENT_REQUEST, DIARY_SEARCH_CONTENT_SUCCESS, DIARY_SEARCH_CONTENT_FAILURE } from '../reducers/article';\nimport { Alert } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axios = getAxios();\n\nfunction articleAddAPI(data) {\n  return axios.post('diary', data.data, {\n    params: {\n      userId: data.userId\n    }\n  });\n}\n\nfunction* articleAdd(action) {\n  const navigate = action.data.navigate;\n\n  try {\n    const res = yield call(articleAddAPI, action.data);\n    yield put({\n      type: ARTICLE_ADD_SUCCESS,\n      data: action.data\n    });\n    yield /*#__PURE__*/_jsxDEV(Alert, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this);\n    yield navigate(`/diary/read/${res.data.diary.dno}`);\n  } catch (err) {\n    yield put({\n      type: ARTICLE_ADD_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction articleListAPI(data) {\n  return axios.get('/user/read/', {\n    params: {\n      userId: data\n    }\n  });\n}\n\nfunction* articleList(action) {\n  try {\n    const result = yield call(articleListAPI, action.data);\n    const dairies = result.data.user.dairies;\n    yield put({\n      type: ARTICLE_LIST_SUCCESS,\n      data: dairies\n    });\n  } catch (err) {\n    yield put({\n      type: ARTICLE_LIST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction diarySearchWordAPI(data) {\n  const searchKind = data.searchKind;\n  return axios.get(`diary/${searchKind}`, {\n    params: {\n      userId: data.userId,\n      word: data.word\n    }\n  });\n}\n\nfunction* diarySearchWord(action) {\n  try {\n    const result = yield call(diarySearchWordAPI, action.data);\n    yield put({\n      type: DIARY_SEARCH_WORD_SUCCESS,\n      data: result.data\n    });\n    yield action.data.setData(result.data);\n  } catch (err) {\n    yield put({\n      type: DIARY_SEARCH_WORD_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction diarySearchContentAPI(data) {\n  const searchKind = data.searchKind;\n  return axios.get(`diary/${searchKind}`, {\n    params: {\n      keyword: data.keyword,\n      userId: data.userId\n    }\n  });\n}\n\nfunction* diarySearchContent(action) {\n  try {\n    const result = yield call(diarySearchContentAPI, action.data);\n    yield put({\n      type: DIARY_SEARCH_CONTENT_SUCCESS,\n      data: result.data\n    });\n    yield action.data.setData(result.data);\n  } catch (err) {\n    yield put({\n      type: DIARY_SEARCH_CONTENT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchArticleAdd() {\n  yield takeLatest(ARTICLE_ADD_REQUEST, articleAdd);\n}\n\nfunction* watchArticleList() {\n  yield takeLatest(ARTICLE_LIST_REQUEST, articleList);\n}\n\nfunction* watchDiarySearchWord() {\n  yield takeLatest(DIARY_SEARCH_WORD_REQUEST, diarySearchWord);\n}\n\nfunction* watchDiarySearchContent() {\n  yield takeLatest(DIARY_SEARCH_CONTENT_REQUEST, diarySearchContent);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchArticleAdd), fork(watchArticleList), fork(watchDiarySearchWord), fork(watchDiarySearchContent)]);\n}","map":{"version":3,"sources":["C:/Users/SSAFY/Desktop/새 폴더/S06P31C205/front/src/sagas/article.js"],"names":["getAxios","all","fork","takeLatest","call","put","ARTICLE_ADD_FAILURE","ARTICLE_ADD_REQUEST","ARTICLE_ADD_SUCCESS","ARTICLE_LIST_REQUEST","ARTICLE_LIST_SUCCESS","ARTICLE_LIST_FAILURE","DIARY_SEARCH_WORD_REQUEST","DIARY_SEARCH_WORD_SUCCESS","DIARY_SEARCH_WORD_FAILURE","DIARY_SEARCH_CONTENT_REQUEST","DIARY_SEARCH_CONTENT_SUCCESS","DIARY_SEARCH_CONTENT_FAILURE","Alert","axios","articleAddAPI","data","post","params","userId","articleAdd","action","navigate","res","type","diary","dno","err","error","response","articleListAPI","get","articleList","result","dairies","user","diarySearchWordAPI","searchKind","word","diarySearchWord","setData","diarySearchContentAPI","keyword","diarySearchContent","watchArticleAdd","watchArticleList","watchDiarySearchWord","watchDiarySearchContent","userSaga"],"mappings":"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","sourcesContent":["import { getAxios } from '../api'\r\nimport { all, fork, takeLatest, call, put } from 'redux-saga/effects'\r\nimport {\r\n  ARTICLE_ADD_FAILURE,\r\n  ARTICLE_ADD_REQUEST,\r\n  ARTICLE_ADD_SUCCESS,\r\n  ARTICLE_LIST_REQUEST,\r\n  ARTICLE_LIST_SUCCESS,\r\n  ARTICLE_LIST_FAILURE,\r\n  DIARY_SEARCH_WORD_REQUEST,\r\n  DIARY_SEARCH_WORD_SUCCESS,\r\n  DIARY_SEARCH_WORD_FAILURE,\r\n  DIARY_SEARCH_CONTENT_REQUEST,\r\n  DIARY_SEARCH_CONTENT_SUCCESS,\r\n  DIARY_SEARCH_CONTENT_FAILURE,\r\n} from '../reducers/article'\r\nimport { Alert } from 'antd'\r\n\r\nconst axios = getAxios()\r\n\r\nfunction articleAddAPI(data) {\r\n  return axios.post('diary', data.data, { params: { userId: data.userId } })\r\n}\r\n\r\nfunction* articleAdd(action) {\r\n  const navigate = action.data.navigate\r\n  try {\r\n    const res = yield call(articleAddAPI, action.data)\r\n    yield put({\r\n      type: ARTICLE_ADD_SUCCESS,\r\n      data: action.data,\r\n    })\r\n    yield <Alert />\r\n    yield navigate(`/diary/read/${res.data.diary.dno}`)\r\n  } catch (err) {\r\n    yield put({\r\n      type: ARTICLE_ADD_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction articleListAPI(data) {\r\n  return axios.get('/user/read/', { params: { userId: data } })\r\n}\r\n\r\nfunction* articleList(action) {\r\n  try {\r\n    const result = yield call(articleListAPI, action.data)\r\n    const dairies = result.data.user.dairies\r\n    yield put({\r\n      type: ARTICLE_LIST_SUCCESS,\r\n      data: dairies,\r\n    })\r\n  } catch (err) {\r\n    yield put({\r\n      type: ARTICLE_LIST_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction diarySearchWordAPI(data) {\r\n  const searchKind = data.searchKind\r\n  return axios.get(`diary/${searchKind}`, { params: { userId: data.userId, word: data.word } })\r\n}\r\n\r\nfunction* diarySearchWord(action) {\r\n  try {\r\n    const result = yield call(diarySearchWordAPI, action.data)\r\n    yield put({\r\n      type: DIARY_SEARCH_WORD_SUCCESS,\r\n      data: result.data,\r\n    })\r\n    yield action.data.setData(result.data)\r\n  } catch (err) {\r\n    yield put({\r\n      type: DIARY_SEARCH_WORD_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction diarySearchContentAPI(data) {\r\n  const searchKind = data.searchKind\r\n  return axios.get(`diary/${searchKind}`, {\r\n    params: { keyword: data.keyword, userId: data.userId },\r\n  })\r\n}\r\n\r\nfunction* diarySearchContent(action) {\r\n  try {\r\n    const result = yield call(diarySearchContentAPI, action.data)\r\n    yield put({\r\n      type: DIARY_SEARCH_CONTENT_SUCCESS,\r\n      data: result.data,\r\n    })\r\n    yield action.data.setData(result.data)\r\n  } catch (err) {\r\n    yield put({\r\n      type: DIARY_SEARCH_CONTENT_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction* watchArticleAdd() {\r\n  yield takeLatest(ARTICLE_ADD_REQUEST, articleAdd)\r\n}\r\n\r\nfunction* watchArticleList() {\r\n  yield takeLatest(ARTICLE_LIST_REQUEST, articleList)\r\n}\r\n\r\nfunction* watchDiarySearchWord() {\r\n  yield takeLatest(DIARY_SEARCH_WORD_REQUEST, diarySearchWord)\r\n}\r\n\r\nfunction* watchDiarySearchContent() {\r\n  yield takeLatest(DIARY_SEARCH_CONTENT_REQUEST, diarySearchContent)\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchArticleAdd),\r\n    fork(watchArticleList),\r\n    fork(watchDiarySearchWord),\r\n    fork(watchDiarySearchContent),\r\n  ])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}