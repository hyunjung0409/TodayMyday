{"ast":null,"code":"import { all, fork, takeLatest, call, put, delay } from 'redux-saga/effects';\nimport axios from 'axios';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data)\n    yield delay(2000);\n    yield put({\n      type: 'LOG_IN_SUCCESS'\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI)\n    yield delay(2000);\n    yield put({\n      type: 'LOG_OUT_SUCCESS'\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      data: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\n\nexport default function* rootSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["C:/Users/SSAFY/Desktop/새 폴더/S06P31C205/front/src/sagas/index.js"],"names":["all","fork","takeLatest","call","put","delay","axios","logInAPI","data","post","logIn","action","type","err","response","logOutAPI","logOut","watchLogIn","watchLogOut","rootSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,EAA2CC,KAA3C,QAAwD,oBAAxD;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOF,KAAK,CAACG,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACD;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF;AACA,UAAMN,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE;AADE,KAAD,CAAT;AAGD,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,UAAMT,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,gBADE;AAERJ,MAAAA,IAAI,EAAEK,GAAG,CAACC,QAAJ,CAAaN;AAFX,KAAD,CAAT;AAID;AACF;;AAED,SAASO,SAAT,GAAqB;AACnB,SAAOT,KAAK,CAACG,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,UAAUO,MAAV,GAAmB;AACjB,MAAI;AACF;AACA,UAAMX,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE;AADE,KAAD,CAAT;AAGD,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,UAAMT,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,iBADE;AAERJ,MAAAA,IAAI,EAAEK,GAAG,CAACC,QAAJ,CAAaN;AAFX,KAAD,CAAT;AAID;AACF;;AAED,UAAUS,UAAV,GAAuB;AACrB,QAAMf,UAAU,CAAC,gBAAD,EAAmBQ,KAAnB,CAAhB;AACD;;AAED,UAAUQ,WAAV,GAAwB;AACtB,QAAMhB,UAAU,CAAC,iBAAD,EAAoBc,MAApB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAMnB,GAAG,CAAC,CAACC,IAAI,CAACgB,UAAD,CAAL,EAAmBhB,IAAI,CAACiB,WAAD,CAAvB,CAAD,CAAT;AACD","sourcesContent":["import { all, fork, takeLatest, call, put, delay } from 'redux-saga/effects'\r\nimport axios from 'axios'\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post('/api/login', data)\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    // const result = yield call(logInAPI, action.data)\r\n    yield delay(2000)\r\n    yield put({\r\n      type: 'LOG_IN_SUCCESS',\r\n    })\r\n  } catch (err) {\r\n    yield put({\r\n      type: 'LOG_IN_FAILURE',\r\n      data: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction logOutAPI() {\r\n  return axios.post('/api/logout')\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    // const result = yield call(logOutAPI)\r\n    yield delay(2000)\r\n    yield put({\r\n      type: 'LOG_OUT_SUCCESS',\r\n    })\r\n  } catch (err) {\r\n    yield put({\r\n      type: 'LOG_OUT_FAILURE',\r\n      data: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest('LOG_IN_REQUEST', logIn)\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest('LOG_OUT_REQUEST', logOut)\r\n}\r\n\r\nexport default function* rootSaga() {\r\n  yield all([fork(watchLogIn), fork(watchLogOut)])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}