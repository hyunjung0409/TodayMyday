{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Desktop\\\\\\uC0C8 \\uD3F4\\uB354\\\\S06P31C205\\\\front\\\\src\\\\components\\\\Diary\\\\SearchBar.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { Input, Select, Row, Col } from 'antd';\nimport { getAxios } from '../../api';\nimport jwt_decode from 'jwt-decode';\nimport { useDispatch } from 'react-redux';\nimport { loadUserRequestAction } from '../../reducers/user';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst axios = getAxios();\n\nconst SearchBar = _ref => {\n  _s();\n\n  let {\n    keyword,\n    setKeyword,\n    diaryList,\n    setDiaryList,\n    me,\n    option,\n    setOption,\n    optionBool,\n    setOptionBool\n  } = _ref;\n  const dispatch = useDispatch();\n\n  const onChange = value => {\n    setOption(value);\n  };\n\n  const onSearch = value => {\n    setKeyword(value);\n\n    const getResult = async () => {\n      if (option === 'word') {\n        let result = await axios.get('diary/searchallword', {\n          params: {\n            word: value\n          }\n        });\n        await setDiaryList([...result.data]);\n        setOptionBool(false);\n      } else if (option === 'content') {\n        let result = await axios.get('diary/searchallcontent', {\n          params: {\n            keyword: value\n          }\n        });\n        await setDiaryList([...result.data]);\n        setOptionBool(true);\n      }\n    };\n\n    try {\n      getResult();\n    } catch (err) {\n      console.log(err);\n    }\n  }; // useEffect(() => {\n  //   if (localStorage.getItem('jwtToken') != null) {\n  //     const decode_token = jwt_decode(localStorage.getItem('jwtToken'))\n  //     const userId = decode_token.sub\n  //     dispatch(loadUserRequestAction({ userId }))\n  //   }\n  // }, [])\n\n\n  return /*#__PURE__*/_jsxDEV(Input.Group, {\n    style: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Select, {\n      defaultValue: \"word\",\n      onChange: onChange,\n      style: {\n        float: 'left',\n        width: '10%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Option, {\n        value: \"word\",\n        children: \"\\uB2E8\\uC5B4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Option, {\n        value: \"content\",\n        children: \"\\uB0B4\\uC6A9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input.Search, {\n      allowClear: true,\n      placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n      onSearch: onSearch,\n      style: {\n        width: '90%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchBar, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SearchBar;\nexport default SearchBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchBar\");","map":{"version":3,"sources":["C:/Users/SSAFY/Desktop/새 폴더/S06P31C205/front/src/components/Diary/SearchBar.jsx"],"names":["React","useEffect","Input","Select","Row","Col","getAxios","jwt_decode","useDispatch","loadUserRequestAction","Option","axios","SearchBar","keyword","setKeyword","diaryList","setDiaryList","me","option","setOption","optionBool","setOptionBool","dispatch","onChange","value","onSearch","getResult","result","get","params","word","data","err","console","log","width","float"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,GAAxB,EAA6BC,GAA7B,QAAwC,MAAxC;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,qBAAT,QAAsC,qBAAtC;;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaP,MAAnB;AACA,MAAMQ,KAAK,GAAGL,QAAQ,EAAtB;;AAEA,MAAMM,SAAS,GAAG,QAUZ;AAAA;;AAAA,MAVa;AACjBC,IAAAA,OADiB;AAEjBC,IAAAA,UAFiB;AAGjBC,IAAAA,SAHiB;AAIjBC,IAAAA,YAJiB;AAKjBC,IAAAA,EALiB;AAMjBC,IAAAA,MANiB;AAOjBC,IAAAA,SAPiB;AAQjBC,IAAAA,UARiB;AASjBC,IAAAA;AATiB,GAUb;AACJ,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,QAAQ,GAAIC,KAAD,IAAW;AAC1BL,IAAAA,SAAS,CAACK,KAAD,CAAT;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAID,KAAD,IAAW;AAC1BV,IAAAA,UAAU,CAACU,KAAD,CAAV;;AAEA,UAAME,SAAS,GAAG,YAAY;AAC5B,UAAIR,MAAM,KAAK,MAAf,EAAuB;AACrB,YAAIS,MAAM,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,qBAAV,EAAiC;AAClDC,UAAAA,MAAM,EAAE;AAAEC,YAAAA,IAAI,EAAEN;AAAR;AAD0C,SAAjC,CAAnB;AAGA,cAAMR,YAAY,CAAC,CAAC,GAAGW,MAAM,CAACI,IAAX,CAAD,CAAlB;AACAV,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OAND,MAMO,IAAIH,MAAM,KAAK,SAAf,EAA0B;AAC/B,YAAIS,MAAM,GAAG,MAAMhB,KAAK,CAACiB,GAAN,CAAU,wBAAV,EAAoC;AACrDC,UAAAA,MAAM,EAAE;AAAEhB,YAAAA,OAAO,EAAEW;AAAX;AAD6C,SAApC,CAAnB;AAGA,cAAMR,YAAY,CAAC,CAAC,GAAGW,MAAM,CAACI,IAAX,CAAD,CAAlB;AACAV,QAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,KAdD;;AAgBA,QAAI;AACFK,MAAAA,SAAS;AACV,KAFD,CAEE,OAAOM,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF,GAxBD,CAPI,CAiCJ;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,sBACE,QAAC,KAAD,CAAO,KAAP;AAAa,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAApB;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,YAAY,EAAC,MAArB;AAA4B,MAAA,QAAQ,EAAEZ,QAAtC;AAAgD,MAAA,KAAK,EAAE;AAAEa,QAAAA,KAAK,EAAE,MAAT;AAAiBD,QAAAA,KAAK,EAAE;AAAxB,OAAvD;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME,QAAC,KAAD,CAAO,MAAP;AACE,MAAA,UAAU,MADZ;AAEE,MAAA,WAAW,EAAC,4DAFd;AAGE,MAAA,QAAQ,EAAEV,QAHZ;AAIE,MAAA,KAAK,EAAE;AAAEU,QAAAA,KAAK,EAAE;AAAT;AAJT;AAAA;AAAA;AAAA;AAAA,YANF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAlED;;GAAMvB,S;UAWaJ,W;;;KAXbI,S;AAoEN,eAAeA,SAAf","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { Input, Select, Row, Col } from 'antd'\r\nimport { getAxios } from '../../api'\r\nimport jwt_decode from 'jwt-decode'\r\nimport { useDispatch } from 'react-redux'\r\nimport { loadUserRequestAction } from '../../reducers/user'\r\n\r\nconst { Option } = Select\r\nconst axios = getAxios()\r\n\r\nconst SearchBar = ({\r\n  keyword,\r\n  setKeyword,\r\n  diaryList,\r\n  setDiaryList,\r\n  me,\r\n  option,\r\n  setOption,\r\n  optionBool,\r\n  setOptionBool,\r\n}) => {\r\n  const dispatch = useDispatch()\r\n\r\n  const onChange = (value) => {\r\n    setOption(value)\r\n  }\r\n\r\n  const onSearch = (value) => {\r\n    setKeyword(value)\r\n\r\n    const getResult = async () => {\r\n      if (option === 'word') {\r\n        let result = await axios.get('diary/searchallword', {\r\n          params: { word: value },\r\n        })\r\n        await setDiaryList([...result.data])\r\n        setOptionBool(false)\r\n      } else if (option === 'content') {\r\n        let result = await axios.get('diary/searchallcontent', {\r\n          params: { keyword: value },\r\n        })\r\n        await setDiaryList([...result.data])\r\n        setOptionBool(true)\r\n      }\r\n    }\r\n\r\n    try {\r\n      getResult()\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  // useEffect(() => {\r\n  //   if (localStorage.getItem('jwtToken') != null) {\r\n  //     const decode_token = jwt_decode(localStorage.getItem('jwtToken'))\r\n  //     const userId = decode_token.sub\r\n  //     dispatch(loadUserRequestAction({ userId }))\r\n  //   }\r\n  // }, [])\r\n\r\n  return (\r\n    <Input.Group style={{ width: '100%' }}>\r\n      <Select defaultValue=\"word\" onChange={onChange} style={{ float: 'left', width: '10%' }}>\r\n        <Option value=\"word\">단어</Option>\r\n        <Option value=\"content\">내용</Option>\r\n      </Select>\r\n\r\n      <Input.Search\r\n        allowClear\r\n        placeholder=\"검색어를 입력하세요...\"\r\n        onSearch={onSearch}\r\n        style={{ width: '90%' }}\r\n      />\r\n    </Input.Group>\r\n  )\r\n}\r\n\r\nexport default SearchBar\r\n"]},"metadata":{},"sourceType":"module"}