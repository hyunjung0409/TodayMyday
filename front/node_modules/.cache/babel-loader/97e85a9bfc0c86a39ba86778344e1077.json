{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\SSAFY\\\\Desktop\\\\\\uC0C8 \\uD3F4\\uB354\\\\S06P31C205\\\\front\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(articleAdd),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(articleList),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(diarySearchWord),_marked4=/*#__PURE__*/_regeneratorRuntime.mark(diarySearchContent),_marked5=/*#__PURE__*/_regeneratorRuntime.mark(watchArticleAdd),_marked6=/*#__PURE__*/_regeneratorRuntime.mark(watchArticleList),_marked7=/*#__PURE__*/_regeneratorRuntime.mark(watchDiarySearchWord),_marked8=/*#__PURE__*/_regeneratorRuntime.mark(watchDiarySearchContent),_marked9=/*#__PURE__*/_regeneratorRuntime.mark(userSaga);import{getAxios}from'../api';import{all,fork,takeLatest,call,put}from'redux-saga/effects';import{ARTICLE_ADD_FAILURE,ARTICLE_ADD_REQUEST,ARTICLE_ADD_SUCCESS,ARTICLE_LIST_REQUEST,ARTICLE_LIST_SUCCESS,ARTICLE_LIST_FAILURE,DIARY_SEARCH_WORD_REQUEST,DIARY_SEARCH_WORD_SUCCESS,DIARY_SEARCH_WORD_FAILURE,DIARY_SEARCH_CONTENT_REQUEST,DIARY_SEARCH_CONTENT_SUCCESS,DIARY_SEARCH_CONTENT_FAILURE}from'../reducers/article';var axios=getAxios();function articleAddAPI(data){return axios.post('diary',data.data,{params:{userId:data.userId}});}function articleAdd(action){var navigate,res;return _regeneratorRuntime.wrap(function articleAdd$(_context){while(1){switch(_context.prev=_context.next){case 0:navigate=action.data.navigate;_context.prev=1;_context.next=4;return call(articleAddAPI,action.data);case 4:res=_context.sent;_context.next=7;return put({type:ARTICLE_ADD_SUCCESS,data:action.data});case 7:_context.next=9;return alert('글 작성 성공');case 9:_context.next=11;return navigate(\"/diary/read/\".concat(res.data.diary.dno));case 11:_context.next=17;break;case 13:_context.prev=13;_context.t0=_context[\"catch\"](1);_context.next=17;return put({type:ARTICLE_ADD_FAILURE,error:_context.t0.response.data});case 17:case\"end\":return _context.stop();}}},_marked,null,[[1,13]]);}function articleListAPI(data){return axios.get('/user/read/',{params:{userId:data}});}function articleList(action){var result,dairies;return _regeneratorRuntime.wrap(function articleList$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return call(articleListAPI,action.data);case 3:result=_context2.sent;dairies=result.data.user.dairies;_context2.next=7;return put({type:ARTICLE_LIST_SUCCESS,data:dairies});case 7:_context2.next=13;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);_context2.next=13;return put({type:ARTICLE_LIST_FAILURE,error:_context2.t0.response.data});case 13:case\"end\":return _context2.stop();}}},_marked2,null,[[0,9]]);}function diarySearchWordAPI(data){var searchKind=data.searchKind;return axios.get(\"diary/\".concat(searchKind),{params:{userId:data.userId,word:data.word}});}function diarySearchWord(action){var result;return _regeneratorRuntime.wrap(function diarySearchWord$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return call(diarySearchWordAPI,action.data);case 3:result=_context3.sent;_context3.next=6;return put({type:DIARY_SEARCH_WORD_SUCCESS,data:result.data});case 6:_context3.next=8;return action.data.setData(result.data);case 8:_context3.next=14;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](0);_context3.next=14;return put({type:DIARY_SEARCH_WORD_FAILURE,error:_context3.t0.response.data});case 14:case\"end\":return _context3.stop();}}},_marked3,null,[[0,10]]);}function diarySearchContentAPI(data){var searchKind=data.searchKind;return axios.get(\"diary/\".concat(searchKind),{params:{keyword:data.keyword,userId:data.userId}});}function diarySearchContent(action){var result;return _regeneratorRuntime.wrap(function diarySearchContent$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return call(diarySearchContentAPI,action.data);case 3:result=_context4.sent;_context4.next=6;return put({type:DIARY_SEARCH_CONTENT_SUCCESS,data:result.data});case 6:_context4.next=8;return action.data.setData(result.data);case 8:_context4.next=14;break;case 10:_context4.prev=10;_context4.t0=_context4[\"catch\"](0);_context4.next=14;return put({type:DIARY_SEARCH_CONTENT_FAILURE,error:_context4.t0.response.data});case 14:case\"end\":return _context4.stop();}}},_marked4,null,[[0,10]]);}function watchArticleAdd(){return _regeneratorRuntime.wrap(function watchArticleAdd$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:_context5.next=2;return takeLatest(ARTICLE_ADD_REQUEST,articleAdd);case 2:case\"end\":return _context5.stop();}}},_marked5);}function watchArticleList(){return _regeneratorRuntime.wrap(function watchArticleList$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.next=2;return takeLatest(ARTICLE_LIST_REQUEST,articleList);case 2:case\"end\":return _context6.stop();}}},_marked6);}function watchDiarySearchWord(){return _regeneratorRuntime.wrap(function watchDiarySearchWord$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:_context7.next=2;return takeLatest(DIARY_SEARCH_WORD_REQUEST,diarySearchWord);case 2:case\"end\":return _context7.stop();}}},_marked7);}function watchDiarySearchContent(){return _regeneratorRuntime.wrap(function watchDiarySearchContent$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:_context8.next=2;return takeLatest(DIARY_SEARCH_CONTENT_REQUEST,diarySearchContent);case 2:case\"end\":return _context8.stop();}}},_marked8);}export default function userSaga(){return _regeneratorRuntime.wrap(function userSaga$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.next=2;return all([fork(watchArticleAdd),fork(watchArticleList),fork(watchDiarySearchWord),fork(watchDiarySearchContent)]);case 2:case\"end\":return _context9.stop();}}},_marked9);}","map":{"version":3,"sources":["C:/Users/SSAFY/Desktop/새 폴더/S06P31C205/front/src/sagas/article.js"],"names":["articleAdd","articleList","diarySearchWord","diarySearchContent","watchArticleAdd","watchArticleList","watchDiarySearchWord","watchDiarySearchContent","userSaga","getAxios","all","fork","takeLatest","call","put","ARTICLE_ADD_FAILURE","ARTICLE_ADD_REQUEST","ARTICLE_ADD_SUCCESS","ARTICLE_LIST_REQUEST","ARTICLE_LIST_SUCCESS","ARTICLE_LIST_FAILURE","DIARY_SEARCH_WORD_REQUEST","DIARY_SEARCH_WORD_SUCCESS","DIARY_SEARCH_WORD_FAILURE","DIARY_SEARCH_CONTENT_REQUEST","DIARY_SEARCH_CONTENT_SUCCESS","DIARY_SEARCH_CONTENT_FAILURE","axios","articleAddAPI","data","post","params","userId","action","navigate","res","type","alert","diary","dno","error","response","articleListAPI","get","result","dairies","user","diarySearchWordAPI","searchKind","word","setData","diarySearchContentAPI","keyword"],"mappings":"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","sourcesContent":["import { getAxios } from '../api'\r\nimport { all, fork, takeLatest, call, put } from 'redux-saga/effects'\r\nimport {\r\n  ARTICLE_ADD_FAILURE,\r\n  ARTICLE_ADD_REQUEST,\r\n  ARTICLE_ADD_SUCCESS,\r\n  ARTICLE_LIST_REQUEST,\r\n  ARTICLE_LIST_SUCCESS,\r\n  ARTICLE_LIST_FAILURE,\r\n  DIARY_SEARCH_WORD_REQUEST,\r\n  DIARY_SEARCH_WORD_SUCCESS,\r\n  DIARY_SEARCH_WORD_FAILURE,\r\n  DIARY_SEARCH_CONTENT_REQUEST,\r\n  DIARY_SEARCH_CONTENT_SUCCESS,\r\n  DIARY_SEARCH_CONTENT_FAILURE,\r\n} from '../reducers/article'\r\n\r\nconst axios = getAxios()\r\n\r\nfunction articleAddAPI(data) {\r\n  return axios.post('diary', data.data, { params: { userId: data.userId } })\r\n}\r\n\r\nfunction* articleAdd(action) {\r\n  const navigate = action.data.navigate\r\n  try {\r\n    const res = yield call(articleAddAPI, action.data)\r\n    yield put({\r\n      type: ARTICLE_ADD_SUCCESS,\r\n      data: action.data,\r\n    })\r\n    yield alert('글 작성 성공')\r\n    yield navigate(`/diary/read/${res.data.diary.dno}`)\r\n  } catch (err) {\r\n    yield put({\r\n      type: ARTICLE_ADD_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction articleListAPI(data) {\r\n  return axios.get('/user/read/', { params: { userId: data } })\r\n}\r\n\r\nfunction* articleList(action) {\r\n  try {\r\n    const result = yield call(articleListAPI, action.data)\r\n    const dairies = result.data.user.dairies\r\n    yield put({\r\n      type: ARTICLE_LIST_SUCCESS,\r\n      data: dairies,\r\n    })\r\n  } catch (err) {\r\n    yield put({\r\n      type: ARTICLE_LIST_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction diarySearchWordAPI(data) {\r\n  const searchKind = data.searchKind\r\n  return axios.get(`diary/${searchKind}`, { params: { userId: data.userId, word: data.word } })\r\n}\r\n\r\nfunction* diarySearchWord(action) {\r\n  try {\r\n    const result = yield call(diarySearchWordAPI, action.data)\r\n    yield put({\r\n      type: DIARY_SEARCH_WORD_SUCCESS,\r\n      data: result.data,\r\n    })\r\n    yield action.data.setData(result.data)\r\n  } catch (err) {\r\n    yield put({\r\n      type: DIARY_SEARCH_WORD_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction diarySearchContentAPI(data) {\r\n  const searchKind = data.searchKind\r\n  return axios.get(`diary/${searchKind}`, {\r\n    params: { keyword: data.keyword, userId: data.userId },\r\n  })\r\n}\r\n\r\nfunction* diarySearchContent(action) {\r\n  try {\r\n    const result = yield call(diarySearchContentAPI, action.data)\r\n    yield put({\r\n      type: DIARY_SEARCH_CONTENT_SUCCESS,\r\n      data: result.data,\r\n    })\r\n    yield action.data.setData(result.data)\r\n  } catch (err) {\r\n    yield put({\r\n      type: DIARY_SEARCH_CONTENT_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction* watchArticleAdd() {\r\n  yield takeLatest(ARTICLE_ADD_REQUEST, articleAdd)\r\n}\r\n\r\nfunction* watchArticleList() {\r\n  yield takeLatest(ARTICLE_LIST_REQUEST, articleList)\r\n}\r\n\r\nfunction* watchDiarySearchWord() {\r\n  yield takeLatest(DIARY_SEARCH_WORD_REQUEST, diarySearchWord)\r\n}\r\n\r\nfunction* watchDiarySearchContent() {\r\n  yield takeLatest(DIARY_SEARCH_CONTENT_REQUEST, diarySearchContent)\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([\r\n    fork(watchArticleAdd),\r\n    fork(watchArticleList),\r\n    fork(watchDiarySearchWord),\r\n    fork(watchDiarySearchContent),\r\n  ])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}