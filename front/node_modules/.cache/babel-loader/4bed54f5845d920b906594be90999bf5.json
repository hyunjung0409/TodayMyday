{"ast":null,"code":"import { all, fork, takeLatest, call, put, delay } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE } from '../reducers/user';\nimport { getAxios } from '../api';\nconst axios = getAxios();\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', {\n    userId: data.values.userId,\n    password: data.values.password\n  });\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    const {\n      navigate\n    } = action.data;\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n    navigate('/');\n  } catch (err) {\n    console.log('err', err);\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut(action) {\n  try {\n    // const result = yield call(logOutAPI)\n    const {\n      navigate\n    } = action.data;\n    yield delay(2000);\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n    navigate('/');\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["C:/Users/SSAFY/Desktop/새 폴더/S06P31C205/front/src/sagas/user.js"],"names":["all","fork","takeLatest","call","put","delay","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","getAxios","axios","logInAPI","data","post","userId","values","password","logIn","action","result","navigate","type","err","console","log","error","response","logOutAPI","logOut","watchLogIn","watchLogOut","userSaga"],"mappings":"AAAA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,EAA2CC,KAA3C,QAAwD,oBAAxD;AACA,SACEC,cADF,EAEEC,cAFF,EAGEC,cAHF,EAIEC,eAJF,EAKEC,eALF,EAMEC,eANF,QAOO,kBAPP;AAQA,SAASC,QAAT,QAAyB,QAAzB;AAEA,MAAMC,KAAK,GAAGD,QAAQ,EAAtB;;AAEA,SAASE,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOF,KAAK,CAACG,IAAN,CAAW,aAAX,EAA0B;AAC/BC,IAAAA,MAAM,EAAEF,IAAI,CAACG,MAAL,CAAYD,MADW;AAE/BE,IAAAA,QAAQ,EAAEJ,IAAI,CAACG,MAAL,CAAYC;AAFS,GAA1B,CAAP;AAID;;AAED,UAAUC,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMnB,IAAI,CAACW,QAAD,EAAWO,MAAM,CAACN,IAAlB,CAAzB;AACA,UAAM;AAAEQ,MAAAA;AAAF,QAAeF,MAAM,CAACN,IAA5B;AACA,UAAMX,GAAG,CAAC;AACRoB,MAAAA,IAAI,EAAEjB,cADE;AAERQ,MAAAA,IAAI,EAAEM,MAAM,CAACN;AAFL,KAAD,CAAT;AAIAQ,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GARD,CAQE,OAAOE,GAAP,EAAY;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB;AACA,UAAMrB,GAAG,CAAC;AACRoB,MAAAA,IAAI,EAAEhB,cADE;AAERoB,MAAAA,KAAK,EAAEH,GAAG,CAACI,QAAJ,CAAad;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,SAASe,SAAT,GAAqB;AACnB,SAAOjB,KAAK,CAACG,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,UAAUe,MAAV,CAAiBV,MAAjB,EAAyB;AACvB,MAAI;AACF;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAeF,MAAM,CAACN,IAA5B;AACA,UAAMV,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACRoB,MAAAA,IAAI,EAAEd;AADE,KAAD,CAAT;AAGAa,IAAAA,QAAQ,CAAC,GAAD,CAAR;AACD,GARD,CAQE,OAAOE,GAAP,EAAY;AACZ,UAAMrB,GAAG,CAAC;AACRoB,MAAAA,IAAI,EAAEb,eADE;AAERiB,MAAAA,KAAK,EAAEH,GAAG,CAACI,QAAJ,CAAad;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUiB,UAAV,GAAuB;AACrB,QAAM9B,UAAU,CAACI,cAAD,EAAiBc,KAAjB,CAAhB;AACD;;AAED,UAAUa,WAAV,GAAwB;AACtB,QAAM/B,UAAU,CAACO,eAAD,EAAkBsB,MAAlB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAMlC,GAAG,CAAC,CAACC,IAAI,CAAC+B,UAAD,CAAL,EAAmB/B,IAAI,CAACgC,WAAD,CAAvB,CAAD,CAAT;AACD","sourcesContent":["import { all, fork, takeLatest, call, put, delay } from 'redux-saga/effects'\r\nimport {\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n} from '../reducers/user'\r\nimport { getAxios } from '../api'\r\n\r\nconst axios = getAxios()\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post('/user/login', {\r\n    userId: data.values.userId,\r\n    password: data.values.password,\r\n  })\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    const result = yield call(logInAPI, action.data)\r\n    const { navigate } = action.data\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: action.data,\r\n    })\r\n    navigate('/')\r\n  } catch (err) {\r\n    console.log('err', err)\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction logOutAPI() {\r\n  return axios.post('/api/logout')\r\n}\r\n\r\nfunction* logOut(action) {\r\n  try {\r\n    // const result = yield call(logOutAPI)\r\n    const { navigate } = action.data\r\n    yield delay(2000)\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n    })\r\n    navigate('/')\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn)\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut)\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchLogIn), fork(watchLogOut)])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}