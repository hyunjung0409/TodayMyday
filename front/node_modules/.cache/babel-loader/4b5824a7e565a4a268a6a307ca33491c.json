{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport 'moment/locale/ko';\nimport moment from 'moment';\nimport { Select } from 'antd';\nimport { getAxios } from '../api';\nimport Search from 'antd/lib/input/Search';\nimport { useNavigate } from 'react-router-dom';\nimport { List, Skeleton, Divider } from 'antd';\nimport ArticleListItem from './ArticleListItem';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { articleListRequestAction, diarySearchWordRequestAction, diarySearchContentRequestAction } from '../reducers/article';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\n\nfunction ArticleListForm2(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  const [boolean, setBoolean] = useState('boolean');\n  const [loading, setLoading] = useState(false);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const [searchKind, setSearchKind] = useState(null);\n  const {\n    articleList\n  } = useSelector(state => state.article);\n  const axios = getAxios();\n\n  const loadMoreData = userId => {\n    if (loading) {\n      return;\n    }\n\n    dispatch(articleListRequestAction({\n      userId\n    }));\n    setLoading(true);\n  };\n\n  useEffect(() => {\n    if (me != null) {\n      if (me.userId != null) {\n        loadMoreData(me.userId);\n      }\n    }\n  }, [me]);\n  useEffect(() => {\n    if (articleList != null) {\n      setData([...articleList]);\n    }\n  }, [articleList]);\n  useEffect(() => {\n    console.log('data', data);\n  }, [data]);\n\n  const onSearch = value => {\n    searchKind === 'searchword' ? dispatch(diarySearchWordRequestAction({\n      userId: me.userId,\n      word: value,\n      searchKind,\n      setData\n    })) : dispatch(diarySearchContentRequestAction({\n      userId: me.userId,\n      keyword: value,\n      searchKind,\n      setData\n    }));\n  };\n\n  const pageMove = (dno, e) => {\n    axios.get('/diary/view', {\n      params: {\n        dno: dno\n      }\n    }).then(() => {\n      navigate(`/diary/read/${dno}`);\n    });\n  };\n\n  function handleChange(value) {\n    setSearchKind(value);\n\n    if (value === 'all') {\n      setBoolean('boolean');\n      setData([...articleList]);\n    } else {\n      setBoolean('');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n\n_s(ArticleListForm2, \"kD5arAdmNV+I1Ie/A+xGVxNomtA=\", false, function () {\n  return [useDispatch, useNavigate, useSelector, useSelector];\n});\n\n_c = ArticleListForm2;\nexport default ArticleListForm2;\n\nvar _c;\n\n$RefreshReg$(_c, \"ArticleListForm2\");","map":{"version":3,"sources":["C:/Users/SSAFY/Desktop/새 폴더/S06P31C205/front/src/components/ArticleListForm2.jsx"],"names":["moment","Select","getAxios","Search","useNavigate","List","Skeleton","Divider","ArticleListItem","React","useEffect","useState","useDispatch","useSelector","InfiniteScroll","articleListRequestAction","diarySearchWordRequestAction","diarySearchContentRequestAction","Option","ArticleListForm2","props","dispatch","navigate","data","setData","boolean","setBoolean","loading","setLoading","me","state","user","searchKind","setSearchKind","articleList","article","axios","loadMoreData","userId","console","log","onSearch","value","word","keyword","pageMove","dno","e","get","params","then","handleChange"],"mappings":"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","sourcesContent":["import 'moment/locale/ko'\r\nimport moment from 'moment'\r\nimport { Select } from 'antd'\r\nimport { getAxios } from '../api'\r\nimport Search from 'antd/lib/input/Search'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { List, Skeleton, Divider } from 'antd'\r\nimport ArticleListItem from './ArticleListItem'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport {\r\n  articleListRequestAction,\r\n  diarySearchWordRequestAction,\r\n  diarySearchContentRequestAction,\r\n} from '../reducers/article'\r\n\r\nconst { Option } = Select\r\n\r\nfunction ArticleListForm2(props) {\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate()\r\n  const [data, setData] = useState([])\r\n  const [boolean, setBoolean] = useState('boolean')\r\n  const [loading, setLoading] = useState(false)\r\n  const { me } = useSelector((state) => state.user)\r\n  const [searchKind, setSearchKind] = useState(null)\r\n  const { articleList } = useSelector((state) => state.article)\r\n  const axios = getAxios()\r\n\r\n  const loadMoreData = (userId) => {\r\n    if (loading) {\r\n      return\r\n    }\r\n    dispatch(articleListRequestAction({ userId }))\r\n    setLoading(true)\r\n  }\r\n  useEffect(() => {\r\n    if (me != null) {\r\n      if (me.userId != null) {\r\n        loadMoreData(me.userId)\r\n      }\r\n    }\r\n  }, [me])\r\n\r\n  useEffect(() => {\r\n    if (articleList != null) {\r\n      setData([...articleList])\r\n    }\r\n  }, [articleList])\r\n\r\n  useEffect(() => {\r\n    console.log('data', data)\r\n  }, [data])\r\n\r\n  const onSearch = (value) => {\r\n    searchKind === 'searchword'\r\n      ? dispatch(\r\n          diarySearchWordRequestAction({ userId: me.userId, word: value, searchKind, setData }),\r\n        )\r\n      : dispatch(\r\n          diarySearchContentRequestAction({\r\n            userId: me.userId,\r\n            keyword: value,\r\n            searchKind,\r\n            setData,\r\n          }),\r\n        )\r\n  }\r\n\r\n  const pageMove = (dno, e) => {\r\n    axios.get('/diary/view', { params: { dno: dno } }).then(() => {\r\n      navigate(`/diary/read/${dno}`)\r\n    })\r\n  }\r\n\r\n  function handleChange(value) {\r\n    setSearchKind(value)\r\n    if (value === 'all') {\r\n      setBoolean('boolean')\r\n      setData([...articleList])\r\n    } else {\r\n      setBoolean('')\r\n    }\r\n  }\r\n\r\n  return <></>\r\n}\r\n\r\nexport default ArticleListForm2\r\n"]},"metadata":{},"sourceType":"module"}