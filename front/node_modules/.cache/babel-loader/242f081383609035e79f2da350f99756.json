{"ast":null,"code":"import { getAxios } from '../api';\nimport { all, fork, takeLatest, call, put } from 'redux-saga/effects';\nimport { ARTICLE_ADD_FAILURE, ARTICLE_ADD_REQUEST, ARTICLE_ADD_SUCCESS } from '../reducers/article';\nconst axios = getAxios();\n\nfunction articleAddAPI(data) {\n  const article = data.data;\n  return axios.post(`dairy/${data.userId}`, article);\n}\n\nfunction* articleAdd(action) {\n  try {\n    yield call(articleAddAPI, action.data);\n    yield put({\n      type: ARTICLE_ADD_SUCCESS,\n      data: action.data.data\n    });\n  } catch (err) {\n    yield put({\n      type: ARTICLE_ADD_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchArticleAdd() {\n  yield takeLatest(ARTICLE_ADD_REQUEST, articleAdd);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchArticleAdd)]);\n}","map":{"version":3,"sources":["C:/Users/SSAFY/Desktop/새 폴더/S06P31C205/front/src/sagas/article.js"],"names":["getAxios","all","fork","takeLatest","call","put","ARTICLE_ADD_FAILURE","ARTICLE_ADD_REQUEST","ARTICLE_ADD_SUCCESS","axios","articleAddAPI","data","article","post","userId","articleAdd","action","type","err","error","response","watchArticleAdd","userSaga"],"mappings":"AAAA,SAASA,QAAT,QAAyB,QAAzB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,QAAiD,oBAAjD;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,mBAAnD,QAA8E,qBAA9E;AAEA,MAAMC,KAAK,GAAGT,QAAQ,EAAtB;;AAEA,SAASU,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,QAAMC,OAAO,GAAGD,IAAI,CAACA,IAArB;AACA,SAAOF,KAAK,CAACI,IAAN,CAAY,SAAQF,IAAI,CAACG,MAAO,EAAhC,EAAmCF,OAAnC,CAAP;AACD;;AAED,UAAUG,UAAV,CAAqBC,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMZ,IAAI,CAACM,aAAD,EAAgBM,MAAM,CAACL,IAAvB,CAAV;AACA,UAAMN,GAAG,CAAC;AACRY,MAAAA,IAAI,EAAET,mBADE;AAERG,MAAAA,IAAI,EAAEK,MAAM,CAACL,IAAP,CAAYA;AAFV,KAAD,CAAT;AAID,GAND,CAME,OAAOO,GAAP,EAAY;AACZ,UAAMb,GAAG,CAAC;AACRY,MAAAA,IAAI,EAAEX,mBADE;AAERa,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUU,eAAV,GAA4B;AAC1B,QAAMlB,UAAU,CAACI,mBAAD,EAAsBQ,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUO,QAAV,GAAqB;AAClC,QAAMrB,GAAG,CAAC,CAACC,IAAI,CAACmB,eAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { getAxios } from '../api'\r\nimport { all, fork, takeLatest, call, put } from 'redux-saga/effects'\r\nimport { ARTICLE_ADD_FAILURE, ARTICLE_ADD_REQUEST, ARTICLE_ADD_SUCCESS } from '../reducers/article'\r\n\r\nconst axios = getAxios()\r\n\r\nfunction articleAddAPI(data) {\r\n  const article = data.data\r\n  return axios.post(`dairy/${data.userId}`, article)\r\n}\r\n\r\nfunction* articleAdd(action) {\r\n  try {\r\n    yield call(articleAddAPI, action.data)\r\n    yield put({\r\n      type: ARTICLE_ADD_SUCCESS,\r\n      data: action.data.data,\r\n    })\r\n  } catch (err) {\r\n    yield put({\r\n      type: ARTICLE_ADD_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction* watchArticleAdd() {\r\n  yield takeLatest(ARTICLE_ADD_REQUEST, articleAdd)\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchArticleAdd)])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}