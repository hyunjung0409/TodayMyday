{"ast":null,"code":"import React, { useRef, useState, useImperativeHandle, useCallback, useEffect } from 'react';\nimport { PageFlip } from 'page-flip';\nconst HTMLFlipBookForward = React.forwardRef((props, ref) => {\n  const htmlElementRef = useRef(null);\n  const childRef = useRef([]);\n  const pageFlip = useRef();\n  const [pages, setPages] = useState([]);\n  useImperativeHandle(ref, () => ({\n    pageFlip: () => pageFlip.current\n  }));\n  const refreshOnPageDelete = useCallback(() => {\n    if (pageFlip.current) {\n      pageFlip.current.clear();\n    }\n  }, []);\n  const removeHandlers = useCallback(() => {\n    const flip = pageFlip.current;\n\n    if (flip) {\n      flip.off('flip');\n      flip.off('changeOrientation');\n      flip.off('changeState');\n      flip.off('init');\n      flip.off('update');\n    }\n  }, []);\n  useEffect(() => {\n    childRef.current = [];\n\n    if (props.children) {\n      const childList = React.Children.map(props.children, child => {\n        return React.cloneElement(child, {\n          ref: dom => {\n            if (dom) {\n              childRef.current.push(dom);\n            }\n          }\n        });\n      });\n\n      if (!props.renderOnlyPageLengthChange || pages.length !== childList.length) {\n        if (childList.length < pages.length) {\n          refreshOnPageDelete();\n        }\n\n        setPages(childList);\n      }\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [props.children]);\n  useEffect(() => {\n    const setHandlers = () => {\n      const flip = pageFlip.current;\n\n      if (flip) {\n        if (props.onFlip) {\n          flip.on('flip', e => props.onFlip(e));\n        }\n\n        if (props.onChangeOrientation) {\n          flip.on('changeOrientation', e => props.onChangeOrientation(e));\n        }\n\n        if (props.onChangeState) {\n          flip.on('changeState', e => props.onChangeState(e));\n        }\n\n        if (props.onInit) {\n          flip.on('init', e => props.onInit(e));\n        }\n\n        if (props.onUpdate) {\n          flip.on('update', e => props.onUpdate(e));\n        }\n      }\n    };\n\n    if (pages.length > 0 && childRef.current.length > 0) {\n      removeHandlers();\n\n      if (htmlElementRef.current && !pageFlip.current) {\n        pageFlip.current = new PageFlip(htmlElementRef.current, props);\n      }\n\n      if (!pageFlip.current.getFlipController()) {\n        pageFlip.current.loadFromHTML(childRef.current);\n      } else {\n        pageFlip.current.updateFromHtml(childRef.current);\n      }\n\n      setHandlers();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [pages]);\n  return React.createElement(\"div\", {\n    ref: htmlElementRef,\n    className: props.className,\n    style: props.style\n  }, pages);\n});\nconst HTMLFlipBook = React.memo(HTMLFlipBookForward);\nexport default HTMLFlipBook;","map":{"version":3,"mappings":"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","names":["HTMLFlipBookForward","React","forwardRef","props","ref","htmlElementRef","useRef","childRef","pageFlip","pages","setPages","useState","useImperativeHandle","current","refreshOnPageDelete","useCallback","clear","removeHandlers","flip","off","useEffect","children","childList","Children","map","child","cloneElement","dom","push","renderOnlyPageLengthChange","length","setHandlers","onFlip","on","e","onChangeOrientation","onChangeState","onInit","onUpdate","PageFlip","getFlipController","loadFromHTML","updateFromHtml","className","style","HTMLFlipBook","memo"],"sources":["C:\\Users\\SSAFY\\Desktop\\새 폴더\\S06P31C205\\front\\node_modules\\react-pageflip\\src\\html-flip-book\\index.tsx"],"sourcesContent":["import React, {\n    ReactElement,\n    useCallback,\n    useEffect,\n    useImperativeHandle,\n    useRef,\n    useState,\n} from 'react';\n\nimport { PageFlip } from 'page-flip';\nimport { IFlipSetting, IEventProps } from './settings';\n\ninterface IProps extends IFlipSetting, IEventProps {\n    className: string;\n    style: React.CSSProperties;\n    children: React.ReactNode;\n    renderOnlyPageLengthChange?: boolean;\n}\n\nconst HTMLFlipBookForward = React.forwardRef(\n    (props: IProps, ref: React.MutableRefObject<PageFlip>) => {\n        const htmlElementRef = useRef<HTMLDivElement>(null);\n        const childRef = useRef<HTMLElement[]>([]);\n        const pageFlip = useRef<PageFlip>();\n\n        const [pages, setPages] = useState<ReactElement[]>([]);\n\n        useImperativeHandle(ref, () => ({\n            pageFlip: () => pageFlip.current,\n        }));\n\n        const refreshOnPageDelete = useCallback(() => {\n            if (pageFlip.current) {\n                pageFlip.current.clear();\n            }\n        }, []);\n\n        const removeHandlers = useCallback(() => {\n            const flip = pageFlip.current;\n\n            if (flip) {\n                flip.off('flip');\n                flip.off('changeOrientation');\n                flip.off('changeState');\n                flip.off('init');\n                flip.off('update');\n            }\n        }, []);\n\n        useEffect(() => {\n            childRef.current = [];\n\n            if (props.children) {\n                const childList = React.Children.map(props.children, (child) => {\n                    return React.cloneElement(child as ReactElement, {\n                        ref: (dom) => {\n                            if (dom) {\n                                childRef.current.push(dom);\n                            }\n                        },\n                    });\n                });\n\n                if (!props.renderOnlyPageLengthChange || pages.length !== childList.length) {\n                    if (childList.length < pages.length) {\n                        refreshOnPageDelete();\n                    }\n\n                    setPages(childList);\n                }\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [props.children]);\n\n        useEffect(() => {\n            const setHandlers = () => {\n                const flip = pageFlip.current;\n\n                if (flip) {\n                    if (props.onFlip) {\n                        flip.on('flip', (e: unknown) => props.onFlip(e));\n                    }\n\n                    if (props.onChangeOrientation) {\n                        flip.on('changeOrientation', (e: unknown) => props.onChangeOrientation(e));\n                    }\n\n                    if (props.onChangeState) {\n                        flip.on('changeState', (e: unknown) => props.onChangeState(e));\n                    }\n\n                    if (props.onInit) {\n                        flip.on('init', (e: unknown) => props.onInit(e));\n                    }\n\n                    if (props.onUpdate) {\n                        flip.on('update', (e: unknown) => props.onUpdate(e));\n                    }\n                }\n            };\n\n            if (pages.length > 0 && childRef.current.length > 0) {\n                removeHandlers();\n\n                if (htmlElementRef.current && !pageFlip.current) {\n                    pageFlip.current = new PageFlip(htmlElementRef.current, props);\n                }\n\n                if (!pageFlip.current.getFlipController()) {\n                    pageFlip.current.loadFromHTML(childRef.current);\n                } else {\n                    pageFlip.current.updateFromHtml(childRef.current);\n                }\n\n                setHandlers();\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [pages]);\n\n        return (\n            <div ref={htmlElementRef} className={props.className} style={props.style}>\n                {pages}\n            </div>\n        );\n    }\n);\n\nexport const HTMLFlipBook = React.memo(HTMLFlipBookForward);\n"]},"metadata":{},"sourceType":"module"}