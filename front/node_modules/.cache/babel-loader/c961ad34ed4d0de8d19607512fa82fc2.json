{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Desktop\\\\\\uC0C8 \\uD3F4\\uB354\\\\S06P31C205\\\\front\\\\src\\\\components\\\\Profile\\\\PickWords.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { getAxios } from '../../api';\nimport Search from 'antd/lib/input/Search';\nimport { Select } from 'antd';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { articleListRequestAction, diarySearchWordRequestAction, mySearchWordRequestAction } from '../../reducers/article';\nimport MyWord from '../MyWord';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Option\n} = Select;\nconst Words = styled.div`\n  width: 100%;\n  height: 350px;\n  // background-color: rgb(238, 167, 187);\n  background: #ffe6f0;\n  text-align: left;\n  padding-left: 5%;\n  padding-right: 5%;\n  padding-top: 2%;\n  margin-top: 3%;\n  overflow: auto;\n  border: 1px solid #d3d3d3;\n  border-radius: 3px;\n`;\n_c = Words;\n\nfunction PickWords() {\n  _s();\n\n  const axios = getAxios();\n  const dispatch = useDispatch();\n  const [data, setData] = useState([]);\n  const [keyword, setKeyword] = useState(null);\n  const [word, setWord] = useState(null);\n  const {\n    me\n  } = useSelector(state => state.user);\n\n  const onSearch = value => {\n    setKeyword(value);\n    dispatch(mySearchWordRequestAction({\n      userId: me.userId,\n      word: value,\n      searchKind: 'searchword',\n      setData\n    }));\n  };\n\n  const onChange = e => {\n    e.target.value === '' && axios.get(`/diary/myword`, {\n      params: {\n        userId: me.userId\n      }\n    }).then(res => {\n      setWord(res.data);\n    });\n  };\n\n  useEffect(() => {\n    me !== null && axios.get(`/diary/myword`, {\n      params: {\n        userId: me.userId\n      }\n    }).then(res => {\n      setWord(res.data);\n    });\n  }, [me]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Words, {\n      children: [\"\\uB0B4\\uAC00 \\uC120\\uD0DD\\uD55C \\uB2E8\\uC5B4 \", /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '100%',\n          marginBottom: '10px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Search, {\n          placeholder: \"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\",\n          allowClear: true,\n          onSearch: onSearch,\n          onChange: onChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MyWord, {\n        data: data,\n        keyword: keyword,\n        setWord: setWord,\n        word: word\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PickWords, \"QXrx7e+7ZQBtCeDV9ASlJco7XB0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c2 = PickWords;\nexport default PickWords;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Words\");\n$RefreshReg$(_c2, \"PickWords\");","map":{"version":3,"sources":["C:/Users/SSAFY/Desktop/새 폴더/S06P31C205/front/src/components/Profile/PickWords.jsx"],"names":["React","useEffect","useState","styled","getAxios","Search","Select","useNavigate","useDispatch","useSelector","articleListRequestAction","diarySearchWordRequestAction","mySearchWordRequestAction","MyWord","Option","Words","div","PickWords","axios","dispatch","data","setData","keyword","setKeyword","word","setWord","me","state","user","onSearch","value","userId","searchKind","onChange","e","target","get","params","then","res","width","marginBottom"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport styled from 'styled-components'\r\nimport { getAxios } from '../../api'\r\nimport Search from 'antd/lib/input/Search'\r\nimport { Select } from 'antd'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  articleListRequestAction,\r\n  diarySearchWordRequestAction,\r\n  mySearchWordRequestAction,\r\n} from '../../reducers/article'\r\nimport MyWord from '../MyWord'\r\n\r\nconst { Option } = Select\r\nconst Words = styled.div`\r\n  width: 100%;\r\n  height: 350px;\r\n  // background-color: rgb(238, 167, 187);\r\n  background: #ffe6f0;\r\n  text-align: left;\r\n  padding-left: 5%;\r\n  padding-right: 5%;\r\n  padding-top: 2%;\r\n  margin-top: 3%;\r\n  overflow: auto;\r\n  border: 1px solid #d3d3d3;\r\n  border-radius: 3px;\r\n`\r\n\r\nfunction PickWords() {\r\n  const axios = getAxios()\r\n  const dispatch = useDispatch()\r\n  const [data, setData] = useState([])\r\n  const [keyword, setKeyword] = useState(null)\r\n  const [word, setWord] = useState(null)\r\n  const { me } = useSelector((state) => state.user)\r\n\r\n  const onSearch = (value) => {\r\n    setKeyword(value)\r\n    dispatch(\r\n      mySearchWordRequestAction({\r\n        userId: me.userId,\r\n        word: value,\r\n        searchKind: 'searchword',\r\n        setData,\r\n      }),\r\n    )\r\n  }\r\n\r\n  const onChange = (e) => {\r\n    e.target.value === '' &&\r\n      axios.get(`/diary/myword`, { params: { userId: me.userId } }).then((res) => {\r\n        setWord(res.data)\r\n      })\r\n  }\r\n\r\n  useEffect(() => {\r\n    me !== null &&\r\n      axios.get(`/diary/myword`, { params: { userId: me.userId } }).then((res) => {\r\n        setWord(res.data)\r\n      })\r\n  }, [me])\r\n\r\n  return (\r\n    <div>\r\n      <Words>\r\n        내가 선택한 단어 <hr />\r\n        <div style={{ width: '100%', marginBottom: '10px' }}>\r\n          <Search\r\n            placeholder=\"검색어를 입력하세요...\"\r\n            allowClear\r\n            onSearch={onSearch}\r\n            onChange={onChange}\r\n          />\r\n        </div>\r\n        <hr />\r\n        <MyWord data={data} keyword={keyword} setWord={setWord} word={word} />\r\n      </Words>\r\n    </div>\r\n  )\r\n}\r\nexport default PickWords\r\n"]},"metadata":{},"sourceType":"module"}