{"ast":null,"code":"import { getAxios } from '../api';\nimport { all, fork, takeLatest, call, put } from 'redux-saga/effects';\nimport { ARTICLE_ADD_FAILURE, ARTICLE_ADD_REQUEST, ARTICLE_ADD_SUCCESS, ARTICLE_LIST_REQUEST, ARTICLE_LIST_SUCCESS, ARTICLE_LIST_FAILURE } from '../reducers/article';\nconst axios = getAxios();\n\nfunction articleAddAPI(data) {\n  const article = data.data;\n  return axios.post(`dairy/${data.userId}`, article);\n}\n\nfunction* articleAdd(action) {\n  try {\n    yield call(articleAddAPI, action.data);\n    yield put({\n      type: ARTICLE_ADD_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ARTICLE_ADD_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction articleListAPI(data) {\n  return axios.get(`/user/read/${data}`);\n}\n\nfunction* articleList(action) {\n  try {\n    const result = yield call(articleListAPI, action.data);\n    console.log(result.data.user);\n    yield put({\n      type: ARTICLE_LIST_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: ARTICLE_LIST_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchArticleAdd() {\n  yield takeLatest(ARTICLE_ADD_REQUEST, articleAdd);\n}\n\nfunction* watchArticleList() {\n  yield takeLatest(ARTICLE_LIST_REQUEST, articleList);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchArticleAdd), fork(watchArticleList)]);\n}","map":{"version":3,"sources":["C:/Users/SSAFY/Desktop/새 폴더/S06P31C205/front/src/sagas/article.js"],"names":["getAxios","all","fork","takeLatest","call","put","ARTICLE_ADD_FAILURE","ARTICLE_ADD_REQUEST","ARTICLE_ADD_SUCCESS","ARTICLE_LIST_REQUEST","ARTICLE_LIST_SUCCESS","ARTICLE_LIST_FAILURE","axios","articleAddAPI","data","article","post","userId","articleAdd","action","type","err","error","response","articleListAPI","get","articleList","result","console","log","user","watchArticleAdd","watchArticleList","userSaga"],"mappings":"AAAA,SAASA,QAAT,QAAyB,QAAzB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,QAAiD,oBAAjD;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,mBAHF,EAIEC,oBAJF,EAKEC,oBALF,EAMEC,oBANF,QAOO,qBAPP;AASA,MAAMC,KAAK,GAAGZ,QAAQ,EAAtB;;AAEA,SAASa,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,QAAMC,OAAO,GAAGD,IAAI,CAACA,IAArB;AACA,SAAOF,KAAK,CAACI,IAAN,CAAY,SAAQF,IAAI,CAACG,MAAO,EAAhC,EAAmCF,OAAnC,CAAP;AACD;;AAED,UAAUG,UAAV,CAAqBC,MAArB,EAA6B;AAC3B,MAAI;AACF,UAAMf,IAAI,CAACS,aAAD,EAAgBM,MAAM,CAACL,IAAvB,CAAV;AACA,UAAMT,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAEZ,mBADE;AAERM,MAAAA,IAAI,EAAEK,MAAM,CAACL;AAFL,KAAD,CAAT;AAID,GAND,CAME,OAAOO,GAAP,EAAY;AACZ,UAAMhB,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAEd,mBADE;AAERgB,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,SAASU,cAAT,CAAwBV,IAAxB,EAA8B;AAC5B,SAAOF,KAAK,CAACa,GAAN,CAAW,cAAaX,IAAK,EAA7B,CAAP;AACD;;AAED,UAAUY,WAAV,CAAsBP,MAAtB,EAA8B;AAC5B,MAAI;AACF,UAAMQ,MAAM,GAAG,MAAMvB,IAAI,CAACoB,cAAD,EAAiBL,MAAM,CAACL,IAAxB,CAAzB;AACAc,IAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACb,IAAP,CAAYgB,IAAxB;AACA,UAAMzB,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAEV,oBADE;AAERI,MAAAA,IAAI,EAAEK,MAAM,CAACL;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOO,GAAP,EAAY;AACZ,UAAMhB,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAET,oBADE;AAERW,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaT;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUiB,eAAV,GAA4B;AAC1B,QAAM5B,UAAU,CAACI,mBAAD,EAAsBW,UAAtB,CAAhB;AACD;;AAED,UAAUc,gBAAV,GAA6B;AAC3B,QAAM7B,UAAU,CAACM,oBAAD,EAAuBiB,WAAvB,CAAhB;AACD;;AAED,eAAe,UAAUO,QAAV,GAAqB;AAClC,QAAMhC,GAAG,CAAC,CAACC,IAAI,CAAC6B,eAAD,CAAL,EAAwB7B,IAAI,CAAC8B,gBAAD,CAA5B,CAAD,CAAT;AACD","sourcesContent":["import { getAxios } from '../api'\r\nimport { all, fork, takeLatest, call, put } from 'redux-saga/effects'\r\nimport {\r\n  ARTICLE_ADD_FAILURE,\r\n  ARTICLE_ADD_REQUEST,\r\n  ARTICLE_ADD_SUCCESS,\r\n  ARTICLE_LIST_REQUEST,\r\n  ARTICLE_LIST_SUCCESS,\r\n  ARTICLE_LIST_FAILURE,\r\n} from '../reducers/article'\r\n\r\nconst axios = getAxios()\r\n\r\nfunction articleAddAPI(data) {\r\n  const article = data.data\r\n  return axios.post(`dairy/${data.userId}`, article)\r\n}\r\n\r\nfunction* articleAdd(action) {\r\n  try {\r\n    yield call(articleAddAPI, action.data)\r\n    yield put({\r\n      type: ARTICLE_ADD_SUCCESS,\r\n      data: action.data,\r\n    })\r\n  } catch (err) {\r\n    yield put({\r\n      type: ARTICLE_ADD_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction articleListAPI(data) {\r\n  return axios.get(`/user/read/${data}`)\r\n}\r\n\r\nfunction* articleList(action) {\r\n  try {\r\n    const result = yield call(articleListAPI, action.data)\r\n    console.log(result.data.user)\r\n    yield put({\r\n      type: ARTICLE_LIST_SUCCESS,\r\n      data: action.data,\r\n    })\r\n  } catch (err) {\r\n    yield put({\r\n      type: ARTICLE_LIST_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction* watchArticleAdd() {\r\n  yield takeLatest(ARTICLE_ADD_REQUEST, articleAdd)\r\n}\r\n\r\nfunction* watchArticleList() {\r\n  yield takeLatest(ARTICLE_LIST_REQUEST, articleList)\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchArticleAdd), fork(watchArticleList)])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}