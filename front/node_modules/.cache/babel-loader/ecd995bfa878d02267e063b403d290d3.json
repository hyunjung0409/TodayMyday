{"ast":null,"code":"import axios from 'axios';\nimport { all, fork, takeLatest, call, put, delay } from 'redux-saga/effects';\nimport { LOG_IN_SUCCESS } from '../reducers/user';\n\nfunction logInAPI(data) {\n  return axios.post('/api/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    // const result = yield call(logInAPI, action.data)\n    yield delay(2000);\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: action.data\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_IN_FAILURE',\n      error: err.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/api/logout');\n}\n\nfunction* logOut() {\n  try {\n    // const result = yield call(logOutAPI)\n    yield delay(2000);\n    yield put({\n      type: 'LOG_OUT_SUCCESS'\n    });\n  } catch (err) {\n    yield put({\n      type: 'LOG_OUT_FAILURE',\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest('LOG_IN_REQUEST', logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest('LOG_OUT_REQUEST', logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut)]);\n}","map":{"version":3,"sources":["C:/Users/SSAFY/Desktop/새 폴더/S06P31C205/front/src/sagas/user.js"],"names":["axios","all","fork","takeLatest","call","put","delay","LOG_IN_SUCCESS","logInAPI","data","post","logIn","action","type","err","error","response","logOutAPI","logOut","watchLogIn","watchLogOut","userSaga"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,EAA2CC,KAA3C,QAAwD,oBAAxD;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,SAASC,QAAT,CAAkBC,IAAlB,EAAwB;AACtB,SAAOT,KAAK,CAACU,IAAN,CAAW,YAAX,EAAyBD,IAAzB,CAAP;AACD;;AAED,UAAUE,KAAV,CAAgBC,MAAhB,EAAwB;AACtB,MAAI;AACF;AACA,UAAMN,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAEN,cADE;AAERE,MAAAA,IAAI,EAAEG,MAAM,CAACH;AAFL,KAAD,CAAT;AAID,GAPD,CAOE,OAAOK,GAAP,EAAY;AACZ,UAAMT,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,gBADE;AAERE,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaP;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,SAASQ,SAAT,GAAqB;AACnB,SAAOjB,KAAK,CAACU,IAAN,CAAW,aAAX,CAAP;AACD;;AAED,UAAUQ,MAAV,GAAmB;AACjB,MAAI;AACF;AACA,UAAMZ,KAAK,CAAC,IAAD,CAAX;AACA,UAAMD,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE;AADE,KAAD,CAAT;AAGD,GAND,CAME,OAAOC,GAAP,EAAY;AACZ,UAAMT,GAAG,CAAC;AACRQ,MAAAA,IAAI,EAAE,iBADE;AAERE,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaP;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUU,UAAV,GAAuB;AACrB,QAAMhB,UAAU,CAAC,gBAAD,EAAmBQ,KAAnB,CAAhB;AACD;;AAED,UAAUS,WAAV,GAAwB;AACtB,QAAMjB,UAAU,CAAC,iBAAD,EAAoBe,MAApB,CAAhB;AACD;;AAED,eAAe,UAAUG,QAAV,GAAqB;AAClC,QAAMpB,GAAG,CAAC,CAACC,IAAI,CAACiB,UAAD,CAAL,EAAmBjB,IAAI,CAACkB,WAAD,CAAvB,CAAD,CAAT;AACD","sourcesContent":["import axios from 'axios'\r\nimport { all, fork, takeLatest, call, put, delay } from 'redux-saga/effects'\r\nimport { LOG_IN_SUCCESS } from '../reducers/user'\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post('/api/login', data)\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    // const result = yield call(logInAPI, action.data)\r\n    yield delay(2000)\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: action.data,\r\n    })\r\n  } catch (err) {\r\n    yield put({\r\n      type: 'LOG_IN_FAILURE',\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction logOutAPI() {\r\n  return axios.post('/api/logout')\r\n}\r\n\r\nfunction* logOut() {\r\n  try {\r\n    // const result = yield call(logOutAPI)\r\n    yield delay(2000)\r\n    yield put({\r\n      type: 'LOG_OUT_SUCCESS',\r\n    })\r\n  } catch (err) {\r\n    yield put({\r\n      type: 'LOG_OUT_FAILURE',\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest('LOG_IN_REQUEST', logIn)\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest('LOG_OUT_REQUEST', logOut)\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchLogIn), fork(watchLogOut)])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}