{"ast":null,"code":"import { getAxios } from '../api';\nimport { all, fork, takeLatest, call, put, delay } from 'redux-saga/effects';\nimport { ARTICLE_ADD_FAILURE, ARTICLE_ADD_REQUEST, ARTICLE_ADD_SUCCESS } from '../reducers/article';\nconst axios = getAxios();\n\nfunction articleAddAPI(data) {\n  return axios.post(`dairy/${data.userId}`, data);\n}\n\nfunction* articleAdd(action) {\n  console.log('action.data', action.data);\n\n  try {\n    const result = yield call(articleAddAPI, action.data);\n    yield put({\n      type: ARTICLE_ADD_SUCCESS,\n      data: action.data.data\n    });\n  } catch (err) {\n    yield put({\n      type: ARTICLE_ADD_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchArticleAdd() {\n  yield takeLatest(ARTICLE_ADD_REQUEST, articleAdd);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchArticleAdd)]);\n}","map":{"version":3,"sources":["C:/Users/SSAFY/Desktop/새 폴더/S06P31C205/front/src/sagas/article.js"],"names":["getAxios","all","fork","takeLatest","call","put","delay","ARTICLE_ADD_FAILURE","ARTICLE_ADD_REQUEST","ARTICLE_ADD_SUCCESS","axios","articleAddAPI","data","post","userId","articleAdd","action","console","log","result","type","err","error","response","watchArticleAdd","userSaga"],"mappings":"AAAA,SAASA,QAAT,QAAyB,QAAzB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,EAA2CC,KAA3C,QAAwD,oBAAxD;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,mBAAnD,QAA8E,qBAA9E;AAEA,MAAMC,KAAK,GAAGV,QAAQ,EAAtB;;AAEA,SAASW,aAAT,CAAuBC,IAAvB,EAA6B;AAC3B,SAAOF,KAAK,CAACG,IAAN,CAAY,SAAQD,IAAI,CAACE,MAAO,EAAhC,EAAmCF,IAAnC,CAAP;AACD;;AAED,UAAUG,UAAV,CAAqBC,MAArB,EAA6B;AAC3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BF,MAAM,CAACJ,IAAlC;;AACA,MAAI;AACF,UAAMO,MAAM,GAAG,MAAMf,IAAI,CAACO,aAAD,EAAgBK,MAAM,CAACJ,IAAvB,CAAzB;AACA,UAAMP,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAEX,mBADE;AAERG,MAAAA,IAAI,EAAEI,MAAM,CAACJ,IAAP,CAAYA;AAFV,KAAD,CAAT;AAID,GAND,CAME,OAAOS,GAAP,EAAY;AACZ,UAAMhB,GAAG,CAAC;AACRe,MAAAA,IAAI,EAAEb,mBADE;AAERe,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAaX;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUY,eAAV,GAA4B;AAC1B,QAAMrB,UAAU,CAACK,mBAAD,EAAsBO,UAAtB,CAAhB;AACD;;AAED,eAAe,UAAUU,QAAV,GAAqB;AAClC,QAAMxB,GAAG,CAAC,CAACC,IAAI,CAACsB,eAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { getAxios } from '../api'\r\nimport { all, fork, takeLatest, call, put, delay } from 'redux-saga/effects'\r\nimport { ARTICLE_ADD_FAILURE, ARTICLE_ADD_REQUEST, ARTICLE_ADD_SUCCESS } from '../reducers/article'\r\n\r\nconst axios = getAxios()\r\n\r\nfunction articleAddAPI(data) {\r\n  return axios.post(`dairy/${data.userId}`, data)\r\n}\r\n\r\nfunction* articleAdd(action) {\r\n  console.log('action.data', action.data)\r\n  try {\r\n    const result = yield call(articleAddAPI, action.data)\r\n    yield put({\r\n      type: ARTICLE_ADD_SUCCESS,\r\n      data: action.data.data,\r\n    })\r\n  } catch (err) {\r\n    yield put({\r\n      type: ARTICLE_ADD_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction* watchArticleAdd() {\r\n  yield takeLatest(ARTICLE_ADD_REQUEST, articleAdd)\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchArticleAdd)])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}