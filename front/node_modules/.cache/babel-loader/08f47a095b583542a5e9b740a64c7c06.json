{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Desktop\\\\\\uC0C8 \\uD3F4\\uB354\\\\S06P31C205\\\\front\\\\src\\\\components\\\\Diary\\\\TopWord.jsx\",\n    _s = $RefreshSig$();\n\nimport { getAxios } from '../../api';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport NewsTicker from 'react-advanced-news-ticker';\nimport styled from 'styled-components';\nimport { DownOutlined, UpOutlined } from '@ant-design/icons';\nimport { Row, Col, Button } from 'antd';\nimport WordTicker from './WordTicker';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst axios = getAxios();\n\nfunction TopWord(_ref) {\n  _s();\n\n  let {\n    setKeyword,\n    setDiaryList\n  } = _ref;\n  const {\n    me\n  } = useSelector(state => state.user);\n  const [wordList, setWordList] = useState([]);\n  const [open, setOpen] = useState(false);\n\n  const getWordList = async () => {\n    try {\n      let result = await axios.get('word/readTop', {\n        params: {\n          userId: me.userId\n        }\n      }); // console.log('word-result: ', result.data)\n\n      await setWordList([...result.data]);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onClick = word => {\n    // console.log(word)\n    setKeyword(word);\n\n    const getResult = async () => {\n      let result = await axios.get('diary/searchallword', {\n        params: {\n          word: word\n        }\n      }); // console.log('result: ', result)\n\n      await setDiaryList([...result.data]);\n    };\n\n    try {\n      getResult();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const onOpen = () => {\n    setOpen(!open); // console.log(open)\n  };\n\n  const openRender = () => {\n    const result = [];\n\n    for (let index = 0; index < wordList.length; index++) {\n      result.push( /*#__PURE__*/_jsxDEV(Row, {\n        className: index,\n        align: \"middle\",\n        onClick: e => onClick(wordList[index]),\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: /*#__PURE__*/_jsxDEV(StyledNumber, {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          style: {\n            margin: 0,\n            cursor: 'pointer'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: wordList[index]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this));\n    }\n\n    return result;\n  };\n\n  useEffect(() => {\n    if (me != null) {\n      if (me.userId != null) {\n        getWordList(); // console.log(me)\n      }\n    }\n  }, [me]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word-top10-area\",\n    style: {\n      background: '#FFFFFF',\n      margin: '1rem auto',\n      width: '90%',\n      borderRadius: '3px',\n      border: '1px solid rgba(50, 50, 50, 0.1)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      justify: \"center\",\n      align: \"middle\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          textAlign: 'left',\n          padding: '0.5em 0 0.2em 1em',\n          color: '#424242'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"\\uB098\\uC640 \\uC720\\uC0AC\\uD55C \\uC0AC\\uC6A9\\uC790\\uAC00 \\uC120\\uD0DD\\uD55C \\uB2E8\\uC5B4\\uB294?\\uD83D\\uDE2E\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), open === false ? /*#__PURE__*/_jsxDEV(Button, {\n        type: \"text\",\n        icon: /*#__PURE__*/_jsxDEV(DownOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 37\n        }, this),\n        onClick: onOpen,\n        style: {\n          width: '110px'\n        },\n        children: \"\\uD3BC\\uCCD0\\uBCF4\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        type: \"text\",\n        icon: /*#__PURE__*/_jsxDEV(UpOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 37\n        }, this),\n        onClick: onOpen,\n        style: {\n          width: '110px'\n        },\n        children: \"\\uC811\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      justify: \"center\",\n      children: wordList.length === 10 ? open === false ? /*#__PURE__*/_jsxDEV(WordTicker, {\n        wordList: wordList,\n        setKeyword: setKeyword,\n        setDiaryList: setDiaryList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '1.2rem'\n        },\n        children: openRender()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"\\uB2E8\\uC5B4 \\uB9AC\\uC2A4\\uD2B8\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TopWord, \"SGgcZkyA9YzLSpNWHR0RG6R7Xto=\", false, function () {\n  return [useSelector];\n});\n\n_c = TopWord;\nconst StyledNumber = styled.span`\n  color: white;\n  background-color: #e86f8b;\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  line-height: 20px;\n  text-align: center;\n  margin-right: 5px;\n  border-radius: 2px;\n`;\n_c2 = StyledNumber;\nexport default TopWord;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"TopWord\");\n$RefreshReg$(_c2, \"StyledNumber\");","map":{"version":3,"sources":["C:/Users/SSAFY/Desktop/새 폴더/S06P31C205/front/src/components/Diary/TopWord.jsx"],"names":["getAxios","useEffect","useState","useSelector","NewsTicker","styled","DownOutlined","UpOutlined","Row","Col","Button","WordTicker","axios","TopWord","setKeyword","setDiaryList","me","state","user","wordList","setWordList","open","setOpen","getWordList","result","get","params","userId","data","err","console","log","onClick","word","getResult","onOpen","openRender","index","length","push","e","margin","cursor","background","width","borderRadius","border","textAlign","padding","color","marginBottom","StyledNumber","span"],"mappings":"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","sourcesContent":["import { getAxios } from '../../api'\r\nimport { useEffect, useState } from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport NewsTicker from 'react-advanced-news-ticker'\r\nimport styled from 'styled-components'\r\nimport { DownOutlined, UpOutlined } from '@ant-design/icons'\r\nimport { Row, Col, Button } from 'antd'\r\nimport WordTicker from './WordTicker'\r\n\r\nconst axios = getAxios()\r\n\r\nfunction TopWord({ setKeyword, setDiaryList }) {\r\n  const { me } = useSelector((state) => state.user)\r\n  const [wordList, setWordList] = useState([])\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const getWordList = async () => {\r\n    try {\r\n      let result = await axios.get('word/readTop', {\r\n        params: { userId: me.userId },\r\n      })\r\n      // console.log('word-result: ', result.data)\r\n      await setWordList([...result.data])\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const onClick = (word) => {\r\n    // console.log(word)\r\n    setKeyword(word)\r\n\r\n    const getResult = async () => {\r\n      let result = await axios.get('diary/searchallword', {\r\n        params: { word: word },\r\n      })\r\n      // console.log('result: ', result)\r\n      await setDiaryList([...result.data])\r\n    }\r\n\r\n    try {\r\n      getResult()\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const onOpen = () => {\r\n    setOpen(!open)\r\n    // console.log(open)\r\n  }\r\n\r\n  const openRender = () => {\r\n    const result = []\r\n    for (let index = 0; index < wordList.length; index++) {\r\n      result.push(\r\n        <Row className={index} align=\"middle\" onClick={(e) => onClick(wordList[index])}>\r\n          <strong>\r\n            <StyledNumber>{index + 1}</StyledNumber>\r\n          </strong>\r\n          <h3 style={{ margin: 0, cursor: 'pointer' }}>\r\n            <strong>{wordList[index]}</strong>\r\n          </h3>\r\n        </Row>,\r\n      )\r\n    }\r\n    return result\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (me != null) {\r\n      if (me.userId != null) {\r\n        getWordList()\r\n        // console.log(me)\r\n      }\r\n    }\r\n  }, [me])\r\n\r\n  return (\r\n    <div\r\n      className=\"word-top10-area\"\r\n      style={{\r\n        background: '#FFFFFF',\r\n        margin: '1rem auto',\r\n        width: '90%',\r\n        borderRadius: '3px',\r\n        border: '1px solid rgba(50, 50, 50, 0.1)',\r\n      }}>\r\n      <Row justify=\"center\" align=\"middle\">\r\n        <h2\r\n          style={{\r\n            textAlign: 'left',\r\n            padding: '0.5em 0 0.2em 1em',\r\n            color: '#424242',\r\n          }}>\r\n          <strong>나와 유사한 사용자가 선택한 단어는?😮</strong>\r\n        </h2>\r\n        {open === false ? (\r\n          <Button type=\"text\" icon={<DownOutlined />} onClick={onOpen} style={{ width: '110px' }}>\r\n            펼쳐보기\r\n          </Button>\r\n        ) : (\r\n          <Button type=\"text\" icon={<UpOutlined />} onClick={onOpen} style={{ width: '110px' }}>\r\n            접기\r\n          </Button>\r\n        )}\r\n      </Row>\r\n\r\n      <Row justify=\"center\">\r\n        {wordList.length === 10 ? (\r\n          open === false ? (\r\n            <WordTicker wordList={wordList} setKeyword={setKeyword} setDiaryList={setDiaryList} />\r\n          ) : (\r\n            <div style={{ marginBottom: '1.2rem' }}>{openRender()}</div>\r\n          )\r\n        ) : (\r\n          <div>단어 리스트가 없습니다.</div>\r\n        )}\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst StyledNumber = styled.span`\r\n  color: white;\r\n  background-color: #e86f8b;\r\n  display: inline-block;\r\n  width: 20px;\r\n  height: 20px;\r\n  line-height: 20px;\r\n  text-align: center;\r\n  margin-right: 5px;\r\n  border-radius: 2px;\r\n`\r\nexport default TopWord\r\n"]},"metadata":{},"sourceType":"module"}