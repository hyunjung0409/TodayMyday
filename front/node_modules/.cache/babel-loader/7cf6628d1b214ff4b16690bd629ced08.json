{"ast":null,"code":"import { getAxios } from '../api';\nimport { all, fork, takeLatest, call, put } from 'redux-saga/effects';\nimport { WORD_GET_FAILURE, WORD_GET_REQUEST, WORD_GET_SUCCESS } from '../reducers/word';\nconst axios = getAxios();\n\nfunction wordGetAPI(data) {\n  return axios.post('diary', data.data, {\n    params: {\n      userId: data.userId\n    }\n  });\n}\n\nfunction* wordGet(action) {\n  try {\n    const res = yield call(wordGetAPI, action.data);\n    yield put({\n      type: WORD_GET_SUCCESS,\n      data: action.data\n    });\n    yield alert('글 작성 성공');\n    yield navigate(`/diary/read/${res.data.diary.dno}`);\n  } catch (err) {\n    yield put({\n      type: WORD_GET_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchWordGet() {\n  yield takeLatest(WORD_GET_REQUEST, wordGet);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchWordGet)]);\n}","map":{"version":3,"sources":["C:/Users/SSAFY/Desktop/새 폴더/S06P31C205/front/src/sagas/word.js"],"names":["getAxios","all","fork","takeLatest","call","put","WORD_GET_FAILURE","WORD_GET_REQUEST","WORD_GET_SUCCESS","axios","wordGetAPI","data","post","params","userId","wordGet","action","res","type","alert","navigate","diary","dno","err","error","response","watchWordGet","userSaga"],"mappings":"AAAA,SAASA,QAAT,QAAyB,QAAzB;AACA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,UAApB,EAAgCC,IAAhC,EAAsCC,GAAtC,QAAiD,oBAAjD;AACA,SAASC,gBAAT,EAA2BC,gBAA3B,EAA6CC,gBAA7C,QAAqE,kBAArE;AAEA,MAAMC,KAAK,GAAGT,QAAQ,EAAtB;;AAEA,SAASU,UAAT,CAAoBC,IAApB,EAA0B;AACxB,SAAOF,KAAK,CAACG,IAAN,CAAW,OAAX,EAAoBD,IAAI,CAACA,IAAzB,EAA+B;AAAEE,IAAAA,MAAM,EAAE;AAAEC,MAAAA,MAAM,EAAEH,IAAI,CAACG;AAAf;AAAV,GAA/B,CAAP;AACD;;AAED,UAAUC,OAAV,CAAkBC,MAAlB,EAA0B;AACxB,MAAI;AACF,UAAMC,GAAG,GAAG,MAAMb,IAAI,CAACM,UAAD,EAAaM,MAAM,CAACL,IAApB,CAAtB;AACA,UAAMN,GAAG,CAAC;AACRa,MAAAA,IAAI,EAAEV,gBADE;AAERG,MAAAA,IAAI,EAAEK,MAAM,CAACL;AAFL,KAAD,CAAT;AAIA,UAAMQ,KAAK,CAAC,SAAD,CAAX;AACA,UAAMC,QAAQ,CAAE,eAAcH,GAAG,CAACN,IAAJ,CAASU,KAAT,CAAeC,GAAI,EAAnC,CAAd;AACD,GARD,CAQE,OAAOC,GAAP,EAAY;AACZ,UAAMlB,GAAG,CAAC;AACRa,MAAAA,IAAI,EAAEZ,gBADE;AAERkB,MAAAA,KAAK,EAAED,GAAG,CAACE,QAAJ,CAAad;AAFZ,KAAD,CAAT;AAID;AACF;;AAED,UAAUe,YAAV,GAAyB;AACvB,QAAMvB,UAAU,CAACI,gBAAD,EAAmBQ,OAAnB,CAAhB;AACD;;AAED,eAAe,UAAUY,QAAV,GAAqB;AAClC,QAAM1B,GAAG,CAAC,CAACC,IAAI,CAACwB,YAAD,CAAL,CAAD,CAAT;AACD","sourcesContent":["import { getAxios } from '../api'\r\nimport { all, fork, takeLatest, call, put } from 'redux-saga/effects'\r\nimport { WORD_GET_FAILURE, WORD_GET_REQUEST, WORD_GET_SUCCESS } from '../reducers/word'\r\n\r\nconst axios = getAxios()\r\n\r\nfunction wordGetAPI(data) {\r\n  return axios.post('diary', data.data, { params: { userId: data.userId } })\r\n}\r\n\r\nfunction* wordGet(action) {\r\n  try {\r\n    const res = yield call(wordGetAPI, action.data)\r\n    yield put({\r\n      type: WORD_GET_SUCCESS,\r\n      data: action.data,\r\n    })\r\n    yield alert('글 작성 성공')\r\n    yield navigate(`/diary/read/${res.data.diary.dno}`)\r\n  } catch (err) {\r\n    yield put({\r\n      type: WORD_GET_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction* watchWordGet() {\r\n  yield takeLatest(WORD_GET_REQUEST, wordGet)\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchWordGet)])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}