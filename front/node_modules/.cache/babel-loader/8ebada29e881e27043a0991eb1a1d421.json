{"ast":null,"code":"import { getAxios } from '../api';\nimport { all, fork, takeLatest, call, put, delay } from 'redux-saga/effects';\nimport { LOG_IN_REQUEST, LOG_IN_SUCCESS, LOG_IN_FAILURE, LOG_OUT_REQUEST, LOG_OUT_SUCCESS, LOG_OUT_FAILURE, LOAD_USER_REQUEST, LOAD_USER_SUCCESS, LOAD_USER_FAILURE } from '../reducers/user';\nimport setAuthorizationToken from '../utils/setAuthorizationToken';\nconst axios = getAxios();\n\nfunction loadUsedrAPI(data) {\n  return axios.get(`/user/read`, {\n    params: {\n      userId: data.userId\n    }\n  });\n}\n\nfunction* loadUser(action) {\n  try {\n    const result = yield call(loadUsedrAPI, action.data);\n    yield put({\n      type: LOAD_USER_SUCCESS,\n      data: result.data.user\n    });\n  } catch (err) {\n    yield put({\n      type: LOAD_USER_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction logInAPI(data) {\n  return axios.post('/user/login', {\n    userId: data.userId,\n    password: data.password\n  });\n}\n\nfunction* logIn(action) {\n  try {\n    const result = yield call(logInAPI, action.data);\n    let str = result.headers.authorization;\n    const token = str.substr(7);\n    localStorage.setItem('jwtToken', token);\n    setAuthorizationToken(token);\n    const {\n      navigate\n    } = action.data;\n    let test = '';\n    yield axios.get(`/user/read`, {\n      params: {\n        userId: action.data.userId\n      }\n    }).then(res => {\n      test = res.data.user;\n    });\n    yield put({\n      type: LOG_IN_SUCCESS,\n      data: test\n    });\n    navigate('/main');\n  } catch (err) {\n    yield put({\n      type: LOG_IN_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* logOut(action) {\n  console.log('action', action);\n\n  try {\n    const {\n      navigate\n    } = action.data;\n    yield delay(1000);\n    localStorage.removeItem('jwtToken');\n    yield put({\n      type: LOG_OUT_SUCCESS\n    });\n    navigate('/');\n  } catch (err) {\n    yield put({\n      type: LOG_OUT_FAILURE,\n      error: err.response.data\n    });\n  }\n}\n\nfunction* watchLoadUser() {\n  yield takeLatest(LOAD_USER_REQUEST, loadUser);\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(LOG_OUT_REQUEST, logOut);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchLoadUser)]);\n}","map":{"version":3,"sources":["C:/Users/SSAFY/Desktop/새 폴더/S06P31C205/front/src/sagas/user.js"],"names":["getAxios","all","fork","takeLatest","call","put","delay","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","setAuthorizationToken","axios","loadUsedrAPI","data","get","params","userId","loadUser","action","result","type","user","err","error","response","logInAPI","post","password","logIn","str","headers","authorization","token","substr","localStorage","setItem","navigate","test","then","res","logOut","console","log","removeItem","watchLoadUser","watchLogIn","watchLogOut","userSaga"],"mappings":"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","sourcesContent":["import { getAxios } from '../api'\r\nimport { all, fork, takeLatest, call, put, delay } from 'redux-saga/effects'\r\nimport {\r\n  LOG_IN_REQUEST,\r\n  LOG_IN_SUCCESS,\r\n  LOG_IN_FAILURE,\r\n  LOG_OUT_REQUEST,\r\n  LOG_OUT_SUCCESS,\r\n  LOG_OUT_FAILURE,\r\n  LOAD_USER_REQUEST,\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_FAILURE,\r\n} from '../reducers/user'\r\nimport setAuthorizationToken from '../utils/setAuthorizationToken'\r\n\r\nconst axios = getAxios()\r\n\r\nfunction loadUsedrAPI(data) {\r\n  return axios.get(`/user/read`, { params: { userId: data.userId } })\r\n}\r\n\r\nfunction* loadUser(action) {\r\n  try {\r\n    const result = yield call(loadUsedrAPI, action.data)\r\n    yield put({\r\n      type: LOAD_USER_SUCCESS,\r\n      data: result.data.user,\r\n    })\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOAD_USER_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction logInAPI(data) {\r\n  return axios.post('/user/login', { userId: data.userId, password: data.password })\r\n}\r\n\r\nfunction* logIn(action) {\r\n  try {\r\n    const result = yield call(logInAPI, action.data)\r\n    let str = result.headers.authorization\r\n    const token = str.substr(7)\r\n    localStorage.setItem('jwtToken', token)\r\n    setAuthorizationToken(token)\r\n    const { navigate } = action.data\r\n    let test = ''\r\n    yield axios.get(`/user/read`, { params: { userId: action.data.userId } }).then((res) => {\r\n      test = res.data.user\r\n    })\r\n    yield put({\r\n      type: LOG_IN_SUCCESS,\r\n      data: test,\r\n    })\r\n    navigate('/main')\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_IN_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction* logOut(action) {\r\n  console.log('action', action)\r\n  try {\r\n    const { navigate } = action.data\r\n    yield delay(1000)\r\n    localStorage.removeItem('jwtToken')\r\n    yield put({\r\n      type: LOG_OUT_SUCCESS,\r\n    })\r\n    navigate('/')\r\n  } catch (err) {\r\n    yield put({\r\n      type: LOG_OUT_FAILURE,\r\n      error: err.response.data,\r\n    })\r\n  }\r\n}\r\n\r\nfunction* watchLoadUser() {\r\n  yield takeLatest(LOAD_USER_REQUEST, loadUser)\r\n}\r\n\r\nfunction* watchLogIn() {\r\n  yield takeLatest(LOG_IN_REQUEST, logIn)\r\n}\r\n\r\nfunction* watchLogOut() {\r\n  yield takeLatest(LOG_OUT_REQUEST, logOut)\r\n}\r\n\r\nexport default function* userSaga() {\r\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchLoadUser)])\r\n}\r\n"]},"metadata":{},"sourceType":"module"}