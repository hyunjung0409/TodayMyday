{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Desktop\\\\\\uC0C8 \\uD3F4\\uB354\\\\S06P31C205\\\\front\\\\src\\\\components\\\\Diary\\\\Comment.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { getAxios } from '../../api';\nimport { useSelector } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { useNavigate } from 'react-router';\nimport { Button, Modal } from 'antd';\nimport UpdateComments from './UpdateComments';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet CommentContent = styled.div`\n  display: flex;\n  margin-bottom: 5%;\n`;\nconst CommentPlace = styled.div``;\nlet CommentSize = styled.p`\n  font-size: medium;\n`;\nconst ReadComments = styled.div``;\n_c = ReadComments;\nconst WriteComment = styled.textarea`\n  min-height: 70px;\n  resize: none;\n`;\n_c2 = WriteComment;\nconst ReadComment = styled.div`\n    display: flex;\n    width: 100%\n    margin-top: 5%;\n    margin-bottom: 5%;\n\n`;\n_c3 = ReadComment;\n\nfunction Comment() {\n  _s();\n\n  const {\n    cno\n  } = useParams();\n  const {\n    dno\n  } = useParams();\n  const navigate = useNavigate();\n  const {\n    me\n  } = useSelector(state => state.user);\n  const [comment, setComment] = useState('');\n  const [comments, setComments] = useState([]);\n  const [editable, setEditable] = useState(false);\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const showModal = () => {\n    setIsModalVisible(true);\n  };\n\n  const handleCancel = () => {\n    setIsModalVisible(false);\n  };\n\n  const createComment = () => {\n    const axios = getAxios();\n\n    if (comment == '') {\n      alert('댓글을 입력하세요');\n    } else if (comment !== '') {\n      axios.post('comment', {\n        content: comment,\n        userId: me.userId\n      }, {\n        params: {\n          dno: dno\n        }\n      }).then(res => {\n        setComment('');\n        getComment();\n      });\n    }\n  };\n\n  const getComment = async () => {\n    const axios = getAxios();\n    axios.get(`diary/read/${dno}`, {\n      params: {\n        userId: me.userId\n      }\n    }).then(res => {\n      console.log(res);\n      setComments(res.data.comments);\n      console.log(res.data.comments); // setComments(res.data.comments.content)\n      // res.data.comments.map((a) => {\n      //   return a\n      // }),\n\n      console.log(comments);\n    }).catch(err => {\n      alert('잘못된 접근입니다'); // navigate('/')\n    });\n  };\n\n  const updateComment = () => {\n    const axios = getAxios();\n    axios.put(`comment/${cno}`, {\n      content: comment\n    }, {\n      params: {\n        userId: me.userId\n      }\n    });\n    setComment(comment);\n  };\n\n  const deleteComment = async () => {\n    const axios = getAxios();\n    await axios.delete(`comment/${cno}`, {\n      params: {\n        userId: me.userId\n      }\n    });\n  };\n\n  useEffect(() => {\n    getComment();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(ReadComment, {\n      children: [/*#__PURE__*/_jsxDEV(WriteComment, {\n        value: comment,\n        onChange: e => {\n          setComment(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"dark\",\n        size: \"sm\",\n        onClick: e => {\n          createComment();\n        },\n        children: \"\\uB4F1\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ReadComments, {\n        children: comments && comments.map((a, i) => {\n          return /*#__PURE__*/_jsxDEV(UpdateComments, {\n            cno: a.cno,\n            content: a.content,\n            getComment: getComment\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Comment, \"4dW3EkIwHUYlGFAeLnWpHn+TmnI=\", false, function () {\n  return [useParams, useParams, useNavigate, useSelector];\n});\n\n_c4 = Comment;\nexport default Comment;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"ReadComments\");\n$RefreshReg$(_c2, \"WriteComment\");\n$RefreshReg$(_c3, \"ReadComment\");\n$RefreshReg$(_c4, \"Comment\");","map":{"version":3,"sources":["C:/Users/SSAFY/Desktop/새 폴더/S06P31C205/front/src/components/Diary/Comment.jsx"],"names":["React","useEffect","useState","getAxios","useSelector","useParams","styled","useNavigate","Button","Modal","UpdateComments","CommentContent","div","CommentPlace","CommentSize","p","ReadComments","WriteComment","textarea","ReadComment","Comment","cno","dno","navigate","me","state","user","comment","setComment","comments","setComments","editable","setEditable","show","setShow","handleClose","handleShow","isModalVisible","setIsModalVisible","showModal","handleCancel","createComment","axios","alert","post","content","userId","params","then","res","getComment","get","console","log","data","catch","err","updateComment","put","deleteComment","delete","e","target","value","map","a","i"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { getAxios } from '../../api'\r\nimport { useSelector } from 'react-redux'\r\nimport { useParams } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { useNavigate } from 'react-router'\r\nimport { Button, Modal } from 'antd'\r\nimport UpdateComments from './UpdateComments'\r\nlet CommentContent = styled.div`\r\n  display: flex;\r\n  margin-bottom: 5%;\r\n`\r\nconst CommentPlace = styled.div``\r\nlet CommentSize = styled.p`\r\n  font-size: medium;\r\n`\r\nconst ReadComments = styled.div``\r\nconst WriteComment = styled.textarea`\r\n  min-height: 70px;\r\n  resize: none;\r\n`\r\nconst ReadComment = styled.div`\r\n    display: flex;\r\n    width: 100%\r\n    margin-top: 5%;\r\n    margin-bottom: 5%;\r\n\r\n`\r\nfunction Comment() {\r\n  const { cno } = useParams()\r\n  const { dno } = useParams()\r\n\r\n  const navigate = useNavigate()\r\n  const { me } = useSelector((state) => state.user)\r\n  const [comment, setComment] = useState('')\r\n  const [comments, setComments] = useState([])\r\n  const [editable, setEditable] = useState(false)\r\n  const [show, setShow] = useState(false)\r\n\r\n  const handleClose = () => setShow(false)\r\n  const handleShow = () => setShow(true)\r\n  const [isModalVisible, setIsModalVisible] = useState(false)\r\n  const showModal = () => {\r\n    setIsModalVisible(true)\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false)\r\n  }\r\n  const createComment = () => {\r\n    const axios = getAxios()\r\n\r\n    if (comment == '') {\r\n      alert('댓글을 입력하세요')\r\n    } else if (comment !== '') {\r\n      axios\r\n        .post('comment', { content: comment, userId: me.userId }, { params: { dno: dno } })\r\n        .then((res) => {\r\n          setComment('')\r\n          getComment()\r\n        })\r\n    }\r\n  }\r\n  const getComment = async () => {\r\n    const axios = getAxios()\r\n\r\n    axios\r\n      .get(`diary/read/${dno}`, { params: { userId: me.userId } })\r\n      .then((res) => {\r\n        console.log(res)\r\n        setComments(res.data.comments)\r\n        console.log(res.data.comments)\r\n        // setComments(res.data.comments.content)\r\n        // res.data.comments.map((a) => {\r\n        //   return a\r\n        // }),\r\n        console.log(comments)\r\n      })\r\n      .catch((err) => {\r\n        alert('잘못된 접근입니다')\r\n        // navigate('/')\r\n      })\r\n  }\r\n  const updateComment = () => {\r\n    const axios = getAxios()\r\n\r\n    axios.put(`comment/${cno}`, { content: comment }, { params: { userId: me.userId } })\r\n    setComment(comment)\r\n  }\r\n  const deleteComment = async () => {\r\n    const axios = getAxios()\r\n\r\n    await axios.delete(`comment/${cno}`, { params: { userId: me.userId } })\r\n  }\r\n  useEffect(() => {\r\n    getComment()\r\n  }, [])\r\n  return (\r\n    <div>\r\n      <ReadComment>\r\n        <WriteComment\r\n          value={comment}\r\n          onChange={(e) => {\r\n            setComment(e.target.value)\r\n          }}></WriteComment>\r\n        <Button\r\n          variant=\"dark\"\r\n          size=\"sm\"\r\n          onClick={(e) => {\r\n            createComment()\r\n          }}>\r\n          등록\r\n        </Button>\r\n      </ReadComment>\r\n\r\n      {/* {editable === false ? (\r\n        <div>\r\n          <ReadComments>\r\n            {comments &&\r\n              comments.map((a, i) => {\r\n                return (\r\n                  <div key={i}>\r\n                    <p>{a}</p>\r\n                    <Button\r\n                      variant=\"secondary\"\r\n                      size=\"sm\"\r\n                      onClick={() => {\r\n                        setEditable(!editable)\r\n                      }}>\r\n                      수정\r\n                    </Button>\r\n\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      size=\"sm\"\r\n                      onClick={() => {\r\n                        handleShow()\r\n                      }}>\r\n                      삭제\r\n                    </Button>\r\n\r\n                    <Modal\r\n                      title=\"댓글 삭제\"\r\n                      visible={isModalVisible}\r\n                      onOk={() => {\r\n                        // deleteComment()\r\n                        handleCancel()\r\n                      }}\r\n                      onCancel={handleCancel}>\r\n                      <p>삭제하시겠습니까?</p>\r\n                    </Modal>\r\n                  </div>\r\n                )\r\n              })}\r\n          </ReadComments>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <input type=\"text\" value={comment} onChange={(e) => setComment(e.target.value)} />\r\n          <Button\r\n            variant=\"secondary\"\r\n            size=\"sm\"\r\n            onClick={(e) => {\r\n              setEditable(!editable)\r\n            }}>\r\n            저장\r\n          </Button>{' '}\r\n          <Button\r\n            variant=\"secondary\"\r\n            size=\"sm\"\r\n            onClick={(e) => {\r\n              setEditable(!editable)\r\n            }}>\r\n            취소\r\n          </Button>\r\n        </div>\r\n      )} */}\r\n      <div>\r\n        <ReadComments>\r\n          {comments &&\r\n            comments.map((a, i) => {\r\n              return (\r\n                <UpdateComments\r\n                  key={i}\r\n                  cno={a.cno}\r\n                  content={a.content}\r\n                  getComment={getComment}></UpdateComments>\r\n              )\r\n            })}\r\n        </ReadComments>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Comment\r\n"]},"metadata":{},"sourceType":"module"}